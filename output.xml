<?xml version="1.0" encoding="UTF-8" standalone="no"?><CompetencyAreas><CompetencyArea name="Algorithms and Complexity "><KnowledgeUnit name="Basic Analysis"><Topic description="Differences among best, expected, and worst case behaviors of an algorithm"/><Topic description="Asymptotic analysis of upper and expected complexity bounds"/><Topic description="Big notation: formal definition"/><Topic description="Complexity classes, such as constant, logarithmic, linear, quadratic, and exponential"/><Topic description="Empirical measurements of performance"/><Topic description="Time and space trade-offs in algorithms"/><Topic description="Big notation: use"/><Topic description="Little o, big omega and big theta notation"/><Topic description="Recurrence relations"/><Topic description="Analysis of iterative and recursive algorithms"/><Topic description="Some version of a Master Theorem"/></KnowledgeUnit><KnowledgeUnit name="Algorithmic Strategies"><Topic description="Brute-force algorithms"/><Topic description="Greedy algorithms"/><Topic description="Divide-and-conquer (cross-reference SDF/Algorithms and Design/Problem-solving strategies)"/><Topic description="Recursive backtracking"/><Topic description="Dynamic Programming"/><Topic description="Branch-and-bound"/><Topic description="Heuristics"/><Topic description="Reduction: transform-and-conquer"/></KnowledgeUnit><KnowledgeUnit name="Fundamental Data Structures and Algorithms"><Topic description="Simple numerical algorithms, such as computing the average of a list of numbers, finding the min, max, and mode in a list, approximating the square root of a number, or finding the greatest common divisor"/><Topic description="Sequential and binary search algorithms"/><Topic description="Worst case quadratic sorting algorithms (selection, insertion)"/><Topic description="Worst or average case O(N log N) sorting algorithms (quicksort, heapsort, mergesort)"/><Topic description="Hash tables, including strategies for avoiding and resolving collisions"/><Topic description="Binary search trees"><Subtopic description="Common operations on binary search trees such as select min, max, insert, delete, iterate over tree"/></Topic><Topic description="Graphs and graph algorithms"><Subtopic description="Representations of graphs (e.g., adjacency list, adjacency matrix)"/><Subtopic description="Depth-first and breadth-first traversals"/></Topic><Topic description="Heaps"/><Topic description="Graphs and graph algorithms"><Subtopic description="Shortest-path algorithms (Dijkstra's and Floyd's algorithms)"/><Subtopic description="Minimum spanning tree (Prim's and Kruskal's algorithms)"/></Topic><Topic description="Pattern matching and string/text algorithms (e.g., substring matching, regular expression matching, longest common subsequence algorithms)"/></KnowledgeUnit><KnowledgeUnit name="Basic Automata Computability and Complexity"><Topic description="Finite-state machines"/><Topic description="Regular expressions"/><Topic description="The halting problem"/><Topic description="Context-free grammars (cross-reference PL/Syntax Analysis)"/><Topic description="Introduction to the P and NP classes and the P vs. NP problem"/><Topic description="Introduction to the NP-complete class and exemplary NP-complete problems (e.g., SAT, Knapsack)"/></KnowledgeUnit><KnowledgeUnit name="Advanced Computational Complexity"><Topic description="Review of the classes P and NP; introduce P-space and EXP"/><Topic description="Polynomial hierarchy"/><Topic description="NP-completeness (Cook's theorem)"/><Topic description="Classic NP-complete problems"/><Topic description="Reduction Techniques"/></KnowledgeUnit><KnowledgeUnit name="Advanced Automata Theory and Computability"><Topic description="Sets and languages"><Subtopic description="Regular languages"/><Subtopic description="Review of deterministic finite automata (DFAs)"/><Subtopic description="Nondeterministic finite automata (NFAs)"/><Subtopic description="Equivalence of DFAs and NFAs"/><Subtopic description="Review of regular expressions; their equivalence to finite automata"/><Subtopic description="Closure properties"/><Subtopic description="Proving languages non-regular, via the pumping lemma or alternative means"/></Topic><Topic description="Context-free languages"><Subtopic description="Push-down automata (PDAs)"/><Subtopic description="Relationship of PDAs and context-free grammars"/><Subtopic description="Properties of context-free languages"/></Topic><Topic description="Turing machines, or an equivalent formal model of universal computation"/><Topic description="Nondeterministic Turing machines"/><Topic description="Chomsky hierarchy"/><Topic description="The Church-Turing thesis"/><Topic description="Computability"/><Topic description="Rice's Theorem"/><Topic description="Examples of uncomputable functions"/><Topic description="Implications of uncomputability"/></KnowledgeUnit><KnowledgeUnit name="Advanced Data Structures Algorithms and Analysis"><Topic description="Balanced trees (e.g., AVL trees, red-black trees, splay trees, treaps)"/><Topic description="Graphs (e.g., topological sort, finding strongly connected components, matching)"/><Topic description="Advanced data structures (e.g., B-trees, Fibonacci heaps)"/><Topic description="String-based data structures and algorithms (e.g., suffix arrays, suffix trees, tries)"/><Topic description="Network flows (e.g., max flow [Ford-Fulkerson algorithm], max flow - min cut, maximum bipartite matching)"/><Topic description="Linear Programming (e.g., duality, simplex method, interior point algorithms)"/><Topic description="Number-theoretic algorithms (e.g., modular arithmetic, primality testing, integer factorization)"/><Topic description="Geometric algorithms (e.g., points, line segments, polygons. [properties, intersections], finding convex hull, spatial decomposition, collision detection, geometric search/proximity)"/><Topic description="Randomized algorithms"/><Topic description="Stochastic algorithms"/><Topic description="Approximation algorithms"/><Topic description="Amortized analysis"/><Topic description="Probabilistic analysis"/><Topic description="Online algorithms and competitive analysis"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Architecture and Organization "><KnowledgeUnit name="Digital Logic and Digital Systems"><Topic description="Overview and history of computer architecture"/><Topic description="Combinational vs. sequential logic/Field programmable gate arrays as a fundamental combinational + sequential logic building block"/><Topic description="Multiple representations/layers of interpretation (hardware is just another layer)"/><Topic description="Computer-aided design tools that process hardware and architectural representations"/><Topic description="Register transfer notation/Hardware Description Language (Verilog/VHDL)"/><Topic description="Physical constraints (gate delays, fan-in, fan-out, energy/power)"/></KnowledgeUnit><KnowledgeUnit name="Machine Level Representation of Data"><Topic description="Bits, bytes, and words"/><Topic description="Numeric data representation and number bases"/><Topic description="Fixed- and floating-point systems"/><Topic description="Signed and twos-complement representations"/><Topic description="Representation of non-numeric data (character codes, graphical data)"/><Topic description="Representation of records and arrays"/></KnowledgeUnit><KnowledgeUnit name="Assembly Level Machine Organization"><Topic description="Basic organization of the von Neumann machine"/><Topic description="Control unit; instruction fetch, decode, and execution"/><Topic description="Instruction sets and types (data manipulation, control, I/O)"/><Topic description="Assembly/machine language programming"/><Topic description="Instruction formats"/><Topic description="Addressing modes"/><Topic description="Subroutine call and return mechanisms (cross-reference PL/Language Translation and Execution)"/><Topic description="I/and interrupts"/><Topic description="Heap vs. Static vs. Stack vs. Code segments"/><Topic description="Shared memory multiprocessors/multicore organization"/><Topic description="Introduction to SIMD vs. MIMD and the Flynn Taxonomy"/></KnowledgeUnit><KnowledgeUnit name="Memory System Organization and Architecture"><Topic description="Storage systems and their technology"/><Topic description="Memory hierarchy: importance of temporal and spatial locality"/><Topic description="Main memory organization and operations"/><Topic description="Latency, cycle time, bandwidth, and interleaving"/><Topic description="Cache memories (address mapping, block size, replacement and store policy)"/><Topic description="Multiprocessor cache consistency/Using the memory system for inter-core synchronization/atomic memory operations"/><Topic description="Virtual memory (page table, TLB)"/><Topic description="Fault handling and reliability"/><Topic description="Error coding, data compression, and data integrity (cross-reference SF/Reliability through Redundancy)"/></KnowledgeUnit><KnowledgeUnit name="Interfacing and Communication"><Topic description="I/fundamentals: handshaking, buffering, programmed I/O, interrupt-driven I/O"/><Topic description="Interrupt structures: vectored and prioritized, interrupt acknowledgment"/><Topic description="External storage, physical organization, and drives"/><Topic description="Buses: bus protocols, arbitration, direct-memory access (DMA)"/><Topic description="Introduction to networks: communications networks as another layer of remote access"/><Topic description="Multimedia support"/><Topic description="RAID architectures"/></KnowledgeUnit><KnowledgeUnit name="Functional Organization"><Topic description="Implementation of simple datapaths, including instruction pipelining, hazard detection and resolution"/><Topic description="Control unit: hardwired realization vs. microprogrammed realization"/><Topic description="Instruction pipelining"/><Topic description="Introduction to instruction-level parallelism (ILP)"/></KnowledgeUnit><KnowledgeUnit name="Multiprocessing and Alternative Architectures"><Topic description="Power Law"/><Topic description="Example SIMD and MIMD instruction sets and architectures"/><Topic description="Interconnection networks (hypercube, shuffle-exchange, mesh, crossbar)"/><Topic description="Shared multiprocessor memory systems and memory consistency"/><Topic description="Multiprocessor cache coherence"/></KnowledgeUnit><KnowledgeUnit name="Performance Enhancements"><Topic description="Superscalar architecture"/><Topic description="Branch prediction, Speculative execution, Out-of-order execution"/><Topic description="Prefetching"/><Topic description="Vector processors and GPUs"/><Topic description="Hardware support for multithreading"/><Topic description="Scalability"/><Topic description="Alternative architectures, such as VLIW/EPIC, and Accelerators and other kinds of Special-Purpose Processors"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Computational Science "><KnowledgeUnit name="Introduction to Modeling and Simulation"><Topic description="Models as abstractions of situations"/><Topic description="Simulations as dynamic modeling"/><Topic description="Simulation techniques and tools, such as physical simulations, human-in-the-loop guided simulations, and virtual reality"/><Topic description="Foundational approaches to validating models (e.g., comparing a simulation's output to real data or the output of another model)"/><Topic description="Presentation of results in a form relevant to the system being modeled"/></KnowledgeUnit><KnowledgeUnit name="Modeling and Simulation"><Topic description="Purpose of modeling and simulation including optimization; supporting decision making, forecasting, safety considerations; for training and education"/><Topic description="Tradeoffs including performance, accuracy, validity, and complexity"/><Topic description="The simulation process; identification of key characteristics or behaviors, simplifying assumptions; validation of outcomes"/><Topic description="Model building: use of mathematical formulas or equations, graphs, constraints; methodologies and techniques; use of time stepping for dynamic systems"/><Topic description="Formal models and modeling techniques: mathematical descriptions involving simplifying assumptions and avoiding detail. Examples of techniques include:"><Subtopic description="Monte Carlo methods"/><Subtopic description="Stochastic processes"/><Subtopic description="Queuing theory"/><Subtopic description="Petri nets and colored Petri nets"/><Subtopic description="Graph structures such as directed graphs, trees, networks"/><Subtopic description="Games, game theory, the modeling of things using game theory"/><Subtopic description="Linear programming and its extensions"/><Subtopic description="Dynamic programming"/><Subtopic description="Differential equations: ODE, PDE"/><Subtopic description="Non-linear techniques"/><Subtopic description="State spaces and transitions"/></Topic><Topic description="Assessing and evaluating models and simulations in a variety of contexts; verification and validation of models and simulations"/><Topic description="Important application areas including health care and diagnostics, economics and finance, city and urban planning, science, and engineering"/><Topic description="Software in support of simulation and modeling; packages, languages"/></KnowledgeUnit><KnowledgeUnit name="Processing"><Topic description="Fundamental programming concepts:"><Subtopic description="The concept of an algorithm consisting of a finite number of well-defined steps, each of which completes in a finite amount of time, as does the entire process."/><Subtopic description="Examples of well-known algorithms such as sorting and searching."/><Subtopic description="The concept of analysis as understanding what the problem is really asking, how a problem can be approached using an algorithm, and how information is represented so that a machine can process it."/><Subtopic description="The development or identification of a workflow."/><Subtopic description="The process of converting an algorithm to machine-executable code."/><Subtopic description="Software processes including lifecycle models, requirements, design, implementation, verification and maintenance."/><Subtopic description="Machine representation of data computer arithmetic."/></Topic><Topic description="Numerical methods"><Subtopic description="Algorithms for numerically fitting data (e.g., Newton's method)"/><Subtopic description="Architectures for numerical computation, including parallel architectures"/></Topic><Topic description="Fundamental properties of parallel and distributed computation:"><Subtopic description="Bandwidth."/><Subtopic description="Latency. Scalability. Granularity."/><Subtopic description="Parallelism including task, data, and event parallelism."/><Subtopic description="Parallel architectures including processor architectures, memory and caching."/><Subtopic description="Parallel programming paradigms including threading, message passing, event driven techniques, parallel software architectures, and MapReduce."/><Subtopic description="Grid computing."/><Subtopic description="The impact of architecture on computational time."/><Subtopic description="Total time to science curve for parallelism: continuum of things."/></Topic><Topic description="Computing costs, e.g., the cost of re-computing a value vs. the cost of storing and lookup."/></KnowledgeUnit><KnowledgeUnit name="Interactive Visualization"><Topic description="Principles of data visualization"/><Topic description="Graphing and visualization algorithms"/><Topic description="Image processing techniques"/><Topic description="Scalability concerns"/></KnowledgeUnit><KnowledgeUnit name="Data, Information, and Knowledge"><Topic description="Content management models, frameworks, systems, design methods (as in IM. Information Management)"/><Topic description="Digital representations of content including numbers, text, images (e.g., raster and vector), vide(e.g.,QuickTime, MPEG2, MPEG4), audio(e.g., written score, MIDI, sampled digitized sound track) and animations; complex/composite/aggregate objects; FRBR"/><Topic description="Digital content creation/capture and preservation, including digitization, sampling, compression, conversion, transformation/translation, migration/emulation, crawling, harvesting"/><Topic description="Content structure / management, including digital libraries and static/dynamic/stream aspects for:"><Subtopic description="Data: data structures, databases"/><Subtopic description="Information: document collections, multimedia pools, hyperbases (hypertext, hypermedia), catalogs, repositories"/><Subtopic description="Knowledge: ontologies, triple stores, semantic networks, rules"/></Topic><Topic description="Processing and pattern recognition, including indexing, searching (including: queries and query languages; central / federated / P2P), retrieving, clustering, classifying/categorizing, analyzing/mining/extracting, rendering, reporting, handling transactions"/><Topic description="User / society support for presentation and interaction, including browse, search, filter, route, visualize, share, collaborate, rate, annotate, personalize, recommend"/><Topic description="Modeling, design, logical and physical implementation, using relevant systems/software"/></KnowledgeUnit><KnowledgeUnit name="Numerical Analysis"><Topic description="Error, stability, convergence, including truncation and round-off"/><Topic description="Function approximation including Taylor's series, interpolation, extrapolation, and regression"/><Topic description="Numerical differentiation and integration (Simpson's Rule, explicit and implicit methods)"/><Topic description="Differential equations (Euler's Method, finite differences)"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Discrete Structures "><KnowledgeUnit name="Sets, Relations, and Functions"><Topic description="Sets"><Subtopic description="Venn diagrams"/><Subtopic description="Union, intersection, complement"/><Subtopic description="Cartesian product"/><Subtopic description="Power sets"/><Subtopic description="Cardinality of finite sets"/></Topic><Topic description="Relations"><Subtopic description="Reflexivity, symmetry, transitivity"/><Subtopic description="Equivalence relations, partial orders"/></Topic><Topic description="Functions"><Subtopic description="Surjections, injections, bijections"/><Subtopic description="Inverses"/><Subtopic description="Composition"/></Topic></KnowledgeUnit><KnowledgeUnit name="Basic Logic"><Topic description="Propositional logic (cross-reference: Propositional logic is also reviewed in IS/Knowledge Based Reasoning)"/><Topic description="Logical connectives"/><Topic description="Truth tables"/><Topic description="Normal forms (conjunctive and disjunctive)"/><Topic description="Validity of well-formed formula"/><Topic description="Propositional inference rules (concepts of modus ponens and modus tollens)"/><Topic description="Predicate logic"><Subtopic description="Universal and existential quantification"/></Topic><Topic description="Limitations of propositional and predicate logic (e.g., expressiveness issues)"/></KnowledgeUnit><KnowledgeUnit name="Proof Techniques"><Topic description="Notions of implication, equivalence, converse, inverse, contrapositive, negation, and contradiction"/><Topic description="The structure of mathematical proofs"/><Topic description="Direct proofs"/><Topic description="Disproving by counterexample"/><Topic description="Proof by contradiction"/><Topic description="Induction over natural numbers"/><Topic description="Structural induction"/><Topic description="Weak and strong induction (i.e., First and Second Principle of Induction)"/><Topic description="Recursive mathematical definitions"/><Topic description="Well orderings"/></KnowledgeUnit><KnowledgeUnit name="Basics of Counting"><Topic description="Counting arguments"><Subtopic description="Set cardinality and counting"/><Subtopic description="Sum and product rule"/><Subtopic description="Inclusion-exclusion principle"/><Subtopic description="Arithmetic and geometric progressions"/></Topic><Topic description="The pigeonhole principle"/><Topic description="Permutations and combinations"><Subtopic description="Basic definitions"/><Subtopic description="Pascal's identity"/><Subtopic description="The binomial theorem"/></Topic><Topic description="Solving recurrence relations (cross-reference: AL/Basic Analysis)"><Subtopic description="An example of a simple recurrence relation, such as Fibonacci numbers"/><Subtopic description="Other examples, showing a variety of solutions"/></Topic><Topic description="Basic modular arithmetic"/></KnowledgeUnit><KnowledgeUnit name="Graphs and Trees"><Topic description="Trees"><Subtopic description="Properties"/><Subtopic description="Traversal strategies"/></Topic><Topic description="Undirected graphs"/><Topic description="Directed graphs"/><Topic description="Weighted graphs"/><Topic description="Spanning trees/forests"/><Topic description="Graph isomorphism"/></KnowledgeUnit><KnowledgeUnit name="Discrete Probability"><Topic description="Finite probability space, events"/><Topic description="Axioms of probability and probability measures"/><Topic description="Conditional probability, Bayes' theorem"/><Topic description="Independence"/><Topic description="Integer random variables (Bernoulli, binomial)"/><Topic description="Expectation, including Linearity of Expectation"/><Topic description="Variance"/><Topic description="Conditional Independence"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Graphics and Visualization "><KnowledgeUnit name="Fundamental Concepts"><Topic description="Media applications including user interfaces, audio and video editing, game engines, cad, visualization, virtual reality"/><Topic description="Digitization of analog data, resolution, and the limits of human perception, e.g., pixels for visual display, dots for laser printers, and samples for audio(HCI/Foundations)"/><Topic description="Use of standard APIs for the construction of UIs and display of standard media formats (see HCI/GUI construction)"/><Topic description="Standard media formats, including lossless and lossy formats"/><Topic description="Additive and subtractive color models (CMYK and RGB) and why these provide a range of colors"/><Topic description="Tradeoffs between storing data and re-computing data as embodied by vector and raster representations of images"/><Topic description="Animation as a sequence of still images"/><Topic description="Double buffering"/></KnowledgeUnit><KnowledgeUnit name="Basic Rendering"><Topic description="Rendering in nature, e.g., the emission and scattering of light and its relation to numerical integration"/><Topic description="Forward and backward rendering (i.e., ray-casting and rasterization)"/><Topic description="Polygonal representation"/><Topic description="Basic radiometry, similar triangles, and projection model"/><Topic description="Affine and coordinate system transformations"/><Topic description="Ray tracing"/><Topic description="Visibility and occlusion, including solutions tthis problem such as depth buffering, Painter's algorithm, and ray tracing"/><Topic description="The forward and backward rendering equation"/><Topic description="Simple triangle rasterization"/><Topic description="Rendering with a shader-based API"/><Topic description="Texture mapping, including minification and magnification (e.g., trilinear MIP-mapping)"/><Topic description="Application of spatial data structures to rendering"/><Topic description="Sampling and anti-aliasing"/><Topic description="Scene graphs and the graphics pipeline"/></KnowledgeUnit><KnowledgeUnit name="Geometric Modeling"><Topic description="Basic geometric operations such as intersection calculation and proximity tests"/><Topic description="Volumes, voxels, and point-based representations"/><Topic description="Parametric polynomial curves and surfaces"/><Topic description="Implicit representation of curves and surfaces"/><Topic description="Approximation techniques such as polynomial curves, Bezier curves, spline curves and surfaces, and non-uniform rational basis (NURB) spines, and level set method"/><Topic description="Surface representation techniques including tessellation, mesh representation, mesh fairing, and mesh generation techniques such as Delaunay triangulation, marching cubes"/><Topic description="Spatial subdivision techniques"/><Topic description="Procedural models such as fractals, generative modeling, and L-systems"/><Topic description="Graftals, cross referenced with programming languages (grammars to generated pictures)"/><Topic description="Elastically deformable and freeform deformable models"/><Topic description="Subdivision surfaces"/><Topic description="Multiresolution modeling"/><Topic description="Reconstruction"/><Topic description="Constructive Solid Geometry (CSG) representation"/></KnowledgeUnit><KnowledgeUnit name="Advanced Rendering"><Topic description="Solutions and approximations to the rendering equation, for example:"><Subtopic description="Distribution ray tracing and path tracing"/><Subtopic description="Photon mapping"/><Subtopic description="Bidirectional path tracing"/><Subtopic description="Reyes (micropolygon) rendering"/><Subtopic description="Metropolis light transport"/></Topic><Topic description="Time (motion blur), lens position (focus), and continuous frequency (color) and their impact on rendering"/><Topic description="Shadow mapping"/><Topic description="Occlusion culling"/><Topic description="Bidirectional Scattering Distribution function (BSDF) theory and microfacets"/><Topic description="Subsurface scattering"/><Topic description="Area light sources"/><Topic description="Hierarchical depth buffering"/><Topic description="The Light Field, image-based rendering"/><Topic description="Non-photorealistic rendering"/><Topic description="GPU architecture"/><Topic description="Human visual systems including adaptation to light, sensitivity to noise, and flicker fusion"/></KnowledgeUnit><KnowledgeUnit name="Computer Animation"><Topic description="Forward and inverse kinematics"/><Topic description="Collision detection and response"/><Topic description="Procedural animation using noise, rules (boids/crowds), and particle systems"/><Topic description="Skinning algorithms"/><Topic description="Physics based motions including rigid body dynamics, physical particle systems, mass-spring networks for cloth and flesh and hair"/><Topic description="Key-frame animation"/><Topic description="Splines"/><Topic description="Data structures for rotations, such as quaternions"/><Topic description="Camera animation"/><Topic description="Motion capture"/></KnowledgeUnit><KnowledgeUnit name="Visualization"><Topic description="Visualization of 2D/3D scalar fields: color mapping, isosurfaces"/><Topic description="Direct volume data rendering: ray-casting, transfer functions, segmentation"/><Topic description="Visualization of:"><Subtopic description="Vector fields and flow data"/><Subtopic description="Time-varying data"/><Subtopic description="High-dimensional data: dimension reduction, parallel coordinates"/><Subtopic description="Non-spatial data: multi-variate, tree/graph structured, text"/></Topic><Topic description="Perceptual and cognitive foundations that drive visual abstractions"/><Topic description="Visualization design"/><Topic description="Evaluation of visualization methods"/><Topic description="Applications of visualization"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Human-Computer Interaction "><KnowledgeUnit name="Foundations"><Topic description="Contexts for HCI (anything with a user interface, e.g., webpage, business applications, mobile applications, and games)"/><Topic description="Processes for user-centered development, e.g., early focus on users, empirical testing, iterative design"/><Topic description="Different measures for evaluation, e.g., utility, efficiency, learnability, user satisfaction"/><Topic description="Usability heuristics and the principles of usability testing"/><Topic description="Physical capabilities that inform interaction design, e.g., color perception, ergonomics"/><Topic description="Cognitive models that inform interaction design, e.g., attention, perception and recognition, movement, and memory; gulfs of expectation and execution"/><Topic description="Social models that inform interaction design, e.g., culture, communication, networks and organizations"/><Topic description="Principles of good design and good designers; engineering tradeoffs"/><Topic description="Accessibility, e.g., interfaces for differently-abled populations (e.g., blind, motion-impaired)"/><Topic description="Interfaces for differently-aged population groups (e.g., children, 80+)"/></KnowledgeUnit><KnowledgeUnit name="Designing Interaction"><Topic description="Principles of graphical user interfaces (GUIs)"/><Topic description="Elements of visual design (layout, color, fonts, labeling)"/><Topic description="Task analysis, including qualitative aspects of generating task analytic models"/><Topic description="Low-fidelity (paper) prototyping"/><Topic description="Quantitative evaluation techniques, e.g., keystroke-level evaluation"/><Topic description="Help and documentation"/><Topic description="Handling human/system failure"/><Topic description="User interface standards"/></KnowledgeUnit><KnowledgeUnit name="Programming Interactive Systems"><Topic description="Software Architecture Patterns, e.g., Model-View controller; command objects, online, offline (cross reference PL/Event Driven and Reactive Programming, where MVC is used in the context of event-driven programming)"/><Topic description="Interaction Design Patterns: visual hierarchy, navigational distance"/><Topic description="Event management and user interaction"/><Topic description="Geometry management (cross-reference GV/Geometric Modelling)"/><Topic description="Choosing interaction styles and interaction techniques"/><Topic description="Presenting information: navigation, representation, manipulation"/><Topic description="Interface animation techniques (e.g., scene graphs)"/><Topic description="Widget classes and libraries"/><Topic description="Modern GUI libraries (e.g. iOS, Android, JavaFX) GUI builders and UI programming environments (cross-reference PBD/Mobile Platforms)"/><Topic description="Declarative Interface Specification: Stylesheets and DOMs"/><Topic description="Data-driven applications (database-backed web pages)"/><Topic description="Cross-platform design"/><Topic description="Design for resource-constrained devices (e.g. small, mobile devices)"/></KnowledgeUnit><KnowledgeUnit name="User-Centered Design and Testing"><Topic description="Approaches to, and characteristics of, the design process"/><Topic description="Functionality and usability requirements (cross-reference to SE/Requirements Engineering)"/><Topic description="Techniques for gathering requirements, e.g., interviews, surveys, ethnographic and contextual enquiry"/><Topic description="Techniques and tools for the analysis and presentation of requirements, e.g., reports, personas"/><Topic description="Prototyping techniques and tools, e.g., sketching, storyboards, low-fidelity prototyping, wireframes"/><Topic description="Evaluation without users, using both qualitative and quantitative techniques, e.g., walkthroughs, GOMS, expert-based analysis, heuristics, guidelines, and standards"/><Topic description="Evaluation with users, e.g., observation, think-aloud, interview, survey, experiment"/><Topic description="Challenges to effective evaluation, e.g., sampling, generalization"/><Topic description="Reporting the results of evaluations"/><Topic description="Internationalization, designing for users from other cultures, cross-cultural"/></KnowledgeUnit><KnowledgeUnit name="New Interactive Technologies"><Topic description="Choosing interaction styles and interaction techniques"/><Topic description="Representing information to users: navigation, representation, manipulation"/><Topic description="Approaches to design, implementation and evaluation of non-mouse interaction"><Subtopic description="Touch and multi-touch interfaces"/><Subtopic description="Shared, embodied, and large interfaces"/><Subtopic description="New input modalities (such as sensor and location data)"/><Subtopic description="New Windows, e.g., iPhone, Android"/><Subtopic description="Speech recognition and natural language processing (cross reference IS/Natural Language Processing)"/><Subtopic description="Wearable and tangible interfaces Persuasive interaction and emotion"/><Subtopic description="Ubiquitous and context-aware interaction technologies (Ubicomp)"/><Subtopic description="Bayesian inference (e.g. predictive text, guided pointing)"/><Subtopic description="Ambient/peripheral display and interaction"/></Topic></KnowledgeUnit><KnowledgeUnit name="Collaboration and Communication"><Topic description="Asynchronous group communication, e.g., e-mail, forums, social networks"/><Topic description="Synchronous group communication, e.g., chat rooms, conferencing, online games"/><Topic description="Social media, social computing, and social network analysis"/><Topic description="Online collaboration, 'smart' spaces, and social coordination aspects of workflow technologies"/><Topic description="Online communities"/><Topic description="Software characters and intelligent agents, virtual worlds and avatars (cross-reference IS/Agents)"/><Topic description="Social psychology"/></KnowledgeUnit><KnowledgeUnit name="Statistical Methods for HCI"><Topic description="t-tests"/><Topic description="ANOVA"/><Topic description="Randomization (non-parametric) testing, within vs. between-subjects design"/><Topic description="Calculating effect size"/><Topic description="Exploratory data analysis"/><Topic description="Presenting statistical data"/><Topic description="Combining qualitative and quantitative results"/></KnowledgeUnit><KnowledgeUnit name="Human Factors and Security"><Topic description="Applied psychology and security policies"/><Topic description="Security economics"/><Topic description="Regulatory environments - responsibility, liability and self-determination"/><Topic description="Organizational vulnerabilities and threats"/><Topic description="Usability design and security"/><Topic description="Pretext, impersonation and fraud, e.g., phishing and spear phishing (cross-reference IAS/Threats and Attacks)"/><Topic description="Trust, privacy and deception"/><Topic description="Biometric authentication (camera, voice)"/><Topic description="Identity management"/></KnowledgeUnit><KnowledgeUnit name="Design-Oriented HCI"><Topic description="Intellectual styles and perspectives to technology and its interfaces"/><Topic description="Consideration of HCI as a design discipline"><Subtopic description="Sketching"/><Subtopic description="Participatory design"/></Topic><Topic description="Critically reflective HCI"><Subtopic description="Critical technical practice"/><Subtopic description="Technologies for political activism"/><Subtopic description="Philosophy of user experience"/><Subtopic description="Ethnography and ethnomethodology"/></Topic><Topic description="Indicative domains of application"><Subtopic description="Sustainability"/><Subtopic description="Arts-informed computing"/></Topic></KnowledgeUnit><KnowledgeUnit name="Mixed, Augmented and Virtual Reality"><Topic description="Output"><Subtopic description="Sound"/><Subtopic description="Stereoscopic display"/><Subtopic description="Force feedback simulation, haptic devices"/></Topic><Topic description="User input"><Subtopic description="Viewer and object tracking"/><Subtopic description="Pose and gesture recognition"/><Subtopic description="Accelerometers"/><Subtopic description="Fiducial markers"/><Subtopic description="User interface issues"/></Topic><Topic description="Physical modelling and rendering"><Subtopic description="Physical simulation: collision detection &amp; response, animation"/><Subtopic description="Visibility computation"/><Subtopic description="Time-critical rendering, multiple levels of details (LOD)"/></Topic><Topic description="System architectures"><Subtopic description="Game engines"/><Subtopic description="Mobile augmented reality"/><Subtopic description="Flight simulators"/><Subtopic description="CAVEs"/><Subtopic description="Medical imaging"/></Topic><Topic description="Networking"><Subtopic description="p2p, client-server, dead reckoning, encryption, synchronization"/><Subtopic description="Distributed collaboration"/></Topic></KnowledgeUnit></CompetencyArea><CompetencyArea name="Information Assurance and Security "><KnowledgeUnit name="Foundational Concepts in Security"><Topic description="CIA (Confidentiality, Integrity, Availability)"/><Topic description="Concepts of risk, threats, vulnerabilities, and attack vectors (cross- reference SE/Software Project Management/Risk)"/><Topic description="Authentication and authorization, access control (mandatory vs. discretionary)"/><Topic description="Concept of trust and trustworthiness"/><Topic description="Ethics (responsible disclosure). (cross-reference SP/Professional Ethics/Accountability, responsibility and liability)"/></KnowledgeUnit><KnowledgeUnit name="Principles of Secure Design"><Topic description="Least privilege and isolation (cross-reference OS/Security and Protection/Policy/mechanism separation and SF/Virtualization and Isolation/Rationale for protection and predictable performance and PL/Language Translation and Execution/Memory management)"/><Topic description="Fail-safe defaults (cross-reference SE/Software Construction/ Coding practices: techniques, idioms/patterns, mechanisms for building quality programs and SDF/Development Methods/Programming correctness)"/><Topic description="Open design (cross-reference SE/Software Evolution/ Software development in the context of large, pre-existing code bases)"/><Topic description="End-to-end security (cross-reference SF/Reliability through Redundancy/ How errors increase the longer the distance between the communicating entities; the end-to-end principle)"/><Topic description="Defense in depth (e.g., defensive programming, layered defense)"/><Topic description="Security by design (cross-reference SE/Software Design/System design principles)"/><Topic description="Tensions between security and other design goals"/><Topic description="Complete mediation"/><Topic description="Use of vetted security components"/><Topic description="Economy of mechanism (reducing trusted computing base, minimize attack surface) (cross-reference SE/Software Design/System design principles and SE/Software Construction/Development context: 'green field' vs. existing code base)"/><Topic description="Usable security (cross-reference HCI/Foundations/Cognitive models that inform interaction design)"/><Topic description="Security composability"/><Topic description="Prevention, detection, and deterrence (cross-reference SF/Reliability through Redundancy/Distinction between bugs and faults and NC/Reliable Data Delivery/Error control and NC/Reliable Data Delivery/Flow control)"/></KnowledgeUnit><KnowledgeUnit name="Defensive Programming"><Topic description="Input validation and data sanitization (cross-reference SDF/Development Methods/Program Correctness)"/><Topic description="Choice of programming language and type-safe languages"/><Topic description="Examples of input validation and data sanitization errors (cross-reference SDF/Development Methods/Program Correctness and SE/Software Construction/Coding Practices)"><Subtopic description="Buffer overflows"/><Subtopic description="Integer errors"/><Subtopic description="SQL injection"/><Subtopic description="XSS vulnerability"/></Topic><Topic description="Race conditions (cross-reference SF/Parallelism/Parallel programming and PD/Parallel Architecture/Shared vs. distributed memory and PD/Communication and Coordination/Shared Memory and PD/Parallelism Fundamentals/Programming errors not found in sequential programming)"/><Topic description="Correct handling of exceptions and unexpected behaviors (cross-reference SDF/Development Methods/program correctness)"/><Topic description="Correct usage of third-party components (cross-reference SDF/Development Methods/program correctness and Operating System Principles/Concepts of application program interfaces (APIs)"/><Topic description="Effectively deploying security updates (cross-reference OS/Security and Protection/Security methods and devices)"/><Topic description="[Electives]"/><Topic description="Information flow control"/><Topic description="Correctly generating randomness for security purposes"/><Topic description="Mechanisms for detecting and mitigating input and data sanitization errors"/><Topic description="Fuzzing"/><Topic description="Static analysis and dynamic analysis"/><Topic description="Program verification"/><Topic description="Operating system support (e.g., address space randomization, canaries)"/><Topic description="Hardware support (e.g., DEP, TPM)"/></KnowledgeUnit><KnowledgeUnit name="Threats and Attacks"><Topic description="Attacker goals, capabilities, and motivations (such as underground economy, digital espionage, cyberwarfare, insider threats, hacktivism, advanced persistent threats)"/><Topic description="Examples of malware (e.g., viruses, worms, spyware, botnets, Trojan horses or rootkits)"/><Topic description="Denial of Service (DoS) and Distributed Denial of Service (DDoS)"/><Topic description="Social engineering (e.g., phishing) (cross-reference SP/Social Context/Social implications of computing in a networked world and HCI/Designing Interaction/Handling human/system failure)"/><Topic description="Attacks on privacy and anonymity (cross-reference HCI/Foundations/Social models that inform interaction design: culture, communication, networks and organizations (cross-reference SP/Privacy and Civil Liberties/technology-based solutions for privacy protection)"/><Topic description="Malware/unwanted communication such as covert channels and steganography"/></KnowledgeUnit><KnowledgeUnit name="Network Security"><Topic description="Network specific threats and attack types (e.g., denial of service, spoofing, sniffing and traffic redirection, man-in-the-middle, message integrity attacks, routing attacks, and traffic analysis)"/><Topic description="Use of cryptography for data and network security"/><Topic description="Architectures for secure networks (e.g., secure channels, secure routing protocols, secure DNS, VPNs, anonymous communication protocols, isolation)"/><Topic description="Defense mechanisms and countermeasures (e.g., network monitoring, intrusion detection, firewalls, spoofing and DoS protection, honeypots, tracebacks)"/><Topic description="Security for wireless, cellular networks (cross-reference NC/Mobility/Principles of cellular networks; cross-reference NC/Mobility/802.11)"/><Topic description="Other non-wired networks (e.g., ad hoc, sensor, and vehicular networks)"/><Topic description="Censorship resistance"/><Topic description="Operational network security management (e.g., configure network access control)"/></KnowledgeUnit><KnowledgeUnit name="Cryptography"><Topic description="Basic Cryptography Terminology covering notions pertaining to the different (communication) partners, secure/unsecure channel, attackers and their capabilities, encryption, decryption, keys and their characteristics, signatures"/><Topic description="Cipher types (e.g., Caesar cipher, affine cipher) together with typical attack methods such as frequency analysis"/><Topic description="Public Key Infrastructure support for digital signature and encryption and its challenges"/><Topic description="Mathematical Preliminaries essential for cryptography, including topics in linear algebra, number theory, probability theory, and statistics"/><Topic description="Cryptographic primitives:"><Subtopic description="pseudo-random generators and stream ciphers"/><Subtopic description="block ciphers (pseudo-random permutations), e.g., AES"/><Subtopic description="pseudo-random functions"/><Subtopic description="hash functions, e.g., SHA2, collision resistance"/><Subtopic description="message authentication codes"/><Subtopic description="key derivations functions"/></Topic><Topic description="Symmetric key cryptography"><Subtopic description="Perfect secrecy and the one time pad"/><Subtopic description="Modes of operation for semantic security and authenticated encryption (e.g., encrypt-then-MAC, OCB, GCM)"/><Subtopic description="Message integrity (e.g., CMAC, HMAC)"/></Topic><Topic description="Public key cryptography:"><Subtopic description="Trapdoor permutation, e.g., RSA"/><Subtopic description="Public key encryption, e.g., RSA encryption, EI Gamal encryption"/><Subtopic description="Digital signatures"/><Subtopic description="Public-key infrastructure (PKI) and certificates"/><Subtopic description="Hardness assumptions, e.g., Diffie-Hellman, integer factoring"/></Topic><Topic description="Authenticated key exchange protocols, e.g., TLS"/><Topic description="Cryptographic protocols: challenge-response authentication, zero-knowledge protocols, commitment, oblivious transfer, secure 2-party or multi-party computation, secret sharing, and applications"/><Topic description="Motivate concepts using real-world applications, e.g., electronic cash, secure channels between clients and servers, secure electronic mail, entity authentication, device pairing, voting systems."/><Topic description="Security definitions and attacks on cryptographic primitives:"><Subtopic description="Goals: indistinguishability, unforgeability, collision-resistance"/><Subtopic description="Attacker capabilities: chosen-message attack (for signatures), birthday attacks, side channel attacks, fault injection attacks."/></Topic><Topic description="Cryptographic standards and references implementations"/><Topic description="Quantum cryptography"/></KnowledgeUnit><KnowledgeUnit name="Web Security"><Topic description="Web security model"><Subtopic description="Browser security model including same-origin policy"/><Subtopic description="Client-server trust boundaries, e.g., cannot rely on secure execution in the client"/></Topic><Topic description="Session management, authentication"><Subtopic description="Single sign-on"/><Subtopic description="HTTPS and certificates"/></Topic><Topic description="Application vulnerabilities and defenses"><Subtopic description="SQL injection"/><Subtopic description="XSS"/><Subtopic description="CSRF"/></Topic><Topic description="Client-side security"><Subtopic description="Cookies security policy"/><Subtopic description="HTTP security extensions, e.g. HSTS"/><Subtopic description="Plugins, extensions, and web apps"/><Subtopic description="Web user tracking"/></Topic><Topic description="Server-side security tools, e.g. Web Application Firewalls (WAFs) and fuzzers"/></KnowledgeUnit><KnowledgeUnit name="Platform Security"><Topic description="Code integrity and code signing"/><Topic description="Secure boot, measured boot, and root of trust"/><Topic description="Attestation"/><Topic description="TPM and secure co-processors"/><Topic description="Security threats from peripherals, e.g., DMA, IOMMU"/><Topic description="Physical attacks: hardware Trojans, memory probes, cold boot attacks"/><Topic description="Security of embedded devices, e.g., medical devices, cars"/><Topic description="Trusted path"/></KnowledgeUnit><KnowledgeUnit name="Security Policy and Governance"><Topic description="Privacy policy (cross-reference SP/Social Context/Social implications of computing in a networked world; cross-reference SP/Professional Ethics/Accountability, responsibility and liability; cross-reference SP/Privacy and Civil Liberties/Legal foundations of privacy protection)"/><Topic description="Inference controls/statistical disclosure limitation"/><Topic description="Backup policy, password refresh policy"/><Topic description="Breach disclosure policy"/><Topic description="Data collection and retention policies"/><Topic description="Supply chain policy"/><Topic description="Cloud security tradeoffs"/></KnowledgeUnit><KnowledgeUnit name="Digital Forensics"><Topic description="Basic Principles and methodologies for digital forensics"/><Topic description="Design systems with forensic needs in mind"/><Topic description="Rules of Evidence - general concepts and differences between jurisdictions and Chain of Custody"/><Topic description="Search and Seizure of evidence: legal and procedural requirements"/><Topic description="Digital Evidence methods and standards"/><Topic description="Techniques and standards for Preservation of Data"/><Topic description="Legal and Reporting Issues including working as an expert witness"/><Topic description="OS/File System Forensics"/><Topic description="Application Forensics"/><Topic description="Web Forensics"/><Topic description="Network Forensics"/><Topic description="Mobile Device Forensics"/><Topic description="Computer/network/system attacks"/><Topic description="Attack detection and investigation"/><Topic description="Anti-forensics"/></KnowledgeUnit><KnowledgeUnit name="Secure Software Engineering"><Topic description="Building security into the software development lifecycle (cross-reference SE/Software Processes)"/><Topic description="Secure design principles and patterns"/><Topic description="Secure software specifications and requirements"/><Topic description="Secure software development practices (cross-reference SE/Software Construction)"/><Topic description="Secure testing - the process of testing that security requirements are met (including static and dynamic analysis)."/><Topic description="Software quality assurance and benchmarking measurements"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Information Management "><KnowledgeUnit name="Information Management Concepts"><Topic description="Information systems as socio-technical systems"/><Topic description="Basic information storage and retrieval (IS&amp;R) concepts"/><Topic description="Information capture and representation"/><Topic description="Supporting human needs: searching, retrieving, linking, browsing, navigating"/><Topic description="Information management applications"/><Topic description="Declarative and navigational queries, use of links"/><Topic description="Analysis and indexing"/><Topic description="Quality issues: reliability, scalability, efficiency, and effectiveness"/></KnowledgeUnit><KnowledgeUnit name="Database Systems"><Topic description="Approaches to and evolution of database systems"/><Topic description="Components of database systems"/><Topic description="Design of core DBMS functions (e.g., query mechanisms, transaction management, buffer management, access methods)"/><Topic description="Database architecture and data independence"/><Topic description="Use of a declarative query language"/><Topic description="Systems supporting structured and/or stream content"/><Topic description="Approaches for managing large volumes of data (e.g., noSQL database systems, use of MapReduce)."/></KnowledgeUnit><KnowledgeUnit name="Data Modeling"><Topic description="Data modeling"/><Topic description="Conceptual models (e.g., entity-relationship, UML diagrams)"/><Topic description="Spreadsheet models"/><Topic description="Relational data models"/><Topic description="Object-oriented models (cross-reference PL/Object-Oriented Programming)"/><Topic description="Semi-structured data model (expressed using DTD or XML Schema, for example)"/></KnowledgeUnit><KnowledgeUnit name="Indexing"><Topic description="The impact of indices on query performance"/><Topic description="The basic structure of an index"/><Topic description="Keeping a buffer of data in memory"/><Topic description="Creating indexes with SQL"/><Topic description="Indexing text"/><Topic description="Indexing the web (e.g., web crawling)"/></KnowledgeUnit><KnowledgeUnit name="Relational Databases"><Topic description="Mapping conceptual schema ta relational schema"/><Topic description="Entity and referential integrity"/><Topic description="Relational algebra and relational calculus"/><Topic description="Relational Database design"/><Topic description="Functional dependency"/><Topic description="Decomposition of a schema; lossless-join and dependency-preservation properties of a decomposition"/><Topic description="Candidate keys, superkeys, and closure of a set of attributes"/><Topic description="Normal forms (BCNF)"/><Topic description="Multi-valued dependency (4NF)"/><Topic description="Join dependency (PJNF, 5NF)"/><Topic description="Representation theory"/></KnowledgeUnit><KnowledgeUnit name="Query Languages"><Topic description="Overview of database languages"/><Topic description="SQL (data definition, query formulation, update sublanguage, constraints, integrity)"/><Topic description="Selections"/><Topic description="Projections"/><Topic description="Select-project-join"/><Topic description="Aggregates and group-by"/><Topic description="Subqueries"/><Topic description="QBE and 4th-generation environments"/><Topic description="Different ways to invoke non-procedural queries in conventional languages"/><Topic description="Introduction to other major query languages (e.g., XPATH, SPARQL)"/><Topic description="Stored procedures"/></KnowledgeUnit><KnowledgeUnit name="Transaction Processing"><Topic description="Transactions"/><Topic description="Failure and recovery"/><Topic description="Concurrency control"/><Topic description="Interaction of transaction management with storage, especially buffering"/></KnowledgeUnit><KnowledgeUnit name="Distributed Databases"><Topic description="Distributed DBMS"><Subtopic description="Distributed data storage"/><Subtopic description="Distributed query processing"/><Subtopic description="Distributed transaction model"/><Subtopic description="Homogeneous and heterogeneous solutions"/><Subtopic description="Client-server distributed databases (cross-reference SF/Computational Paradigms)"/></Topic><Topic description="Parallel DBMS"><Subtopic description="Parallel DBMS architectures: shared memory, shared disk, shared nothing;"/><Subtopic description="Speedup and scale-up, e.g., use of the MapReduce processing model (cross-reference CN/Processing, PD/Parallel Decomposition)"/><Subtopic description="Data replication and weak consistency models"/></Topic></KnowledgeUnit><KnowledgeUnit name="Physical Database Design"><Topic description="Storage and file structure"/><Topic description="Indexed files"/><Topic description="Hashed files"/><Topic description="Signature files"/><Topic description="B-trees"/><Topic description="Files with dense index"/><Topic description="Files with variable length records"/><Topic description="Database efficiency and tuning"/></KnowledgeUnit><KnowledgeUnit name="Data Mining"><Topic description="Uses of data mining"/><Topic description="Data mining algorithms"/><Topic description="Associative and sequential patterns"/><Topic description="Data clustering"/><Topic description="Market basket analysis"/><Topic description="Data cleaning"/><Topic description="Data visualization (cross-reference GV/Visualization and CN/Interactive Visualization)"/></KnowledgeUnit><KnowledgeUnit name="Information Storage and Retrieval"><Topic description="Documents, electronic publishing, markup, and markup languages"/><Topic description="Tries, inverted files, PAT trees, signature files, indexing"/><Topic description="Morphological analysis, stemming, phrases, stop lists"/><Topic description="Term frequency distributions, uncertainty, fuzziness, weighting"/><Topic description="Vector space, probabilistic, logical, and advanced models"/><Topic description="Information needs, relevance, evaluation, effectiveness"/><Topic description="Thesauri, ontologies, classification and categorization, metadata"/><Topic description="Bibliographic information, bibliometrics, citations"/><Topic description="Routing and (community) filtering"/><Topic description="Multimedia search, information seeking behavior, user modeling, feedback"/><Topic description="Information summarization and visualization"/><Topic description="Faceted search (e.g., using citations, keywords, classification schemes)"/><Topic description="Digital libraries"/><Topic description="Digitization, storage, interchange, digital objects, composites, and packages"/><Topic description="Metadata and cataloging"/><Topic description="Naming, repositories, archives"/><Topic description="Archiving and preservation, integrity"/><Topic description="Spaces (conceptual, geographical, 2/3D, VR)"/><Topic description="Architectures (agents, buses, wrappers/mediators), interoperability"/><Topic description="Services (searching, linking, browsing, and so forth)"/><Topic description="Intellectual property rights management, privacy, and protection (watermarking)"/></KnowledgeUnit><KnowledgeUnit name="Multimedia Systems"><Topic description="Input and output devices, device drivers, control signals and protocols, DSPs"/><Topic description="Standards (e.g., audio, graphics, video)"/><Topic description="Applications, media editors, authoring systems, and authoring"/><Topic description="Streams/structures, capture/represent/transform, spaces/domains, compression/coding"/><Topic description="Content-based analysis, indexing, and retrieval of audio, images, animation, and video"/><Topic description="Presentation, rendering, synchronization, multi-modal integration/interfaces"/><Topic description="Real-time delivery, quality of service (including performance), capacity planning, audio/videconferencing, video-on-demand"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Intelligent Systems "><KnowledgeUnit name="Fundamental Issues"><Topic description="Overview of AI problems, examples of successful recent AI applications"/><Topic description="What is intelligent behavior?"><Subtopic description="The Turing test"/><Subtopic description="Rational versus non-rational reasoning"/></Topic><Topic description="Problem characteristics"><Subtopic description="Fully versus partially observable"/><Subtopic description="Single versus multi-agent"/><Subtopic description="Deterministic versus stochastic"/><Subtopic description="Static versus dynamic"/><Subtopic description="Discrete versus continuous"/></Topic><Topic description="Nature of agents"><Subtopic description="Autonomous versus semi-autonomous"/><Subtopic description="Reflexive, goal-based, and utility-based"/><Subtopic description="The importance of perception and environmental interactions"/></Topic><Topic description="Philosophical and ethical issues. [elective]"/></KnowledgeUnit><KnowledgeUnit name="Basic Search Strategies"><Topic description="Problem spaces (states, goals and operators), problem solving by search"/><Topic description="Factored representation (factoring state into variables)"/><Topic description="Uninformed search (breadth-first, depth-first, depth-first with iterative deepening)"/><Topic description="Heuristics and informed search (hill-climbing, generic best-first, A*)"/><Topic description="Space and time efficiency of search"/><Topic description="Two-player games (introduction to minimax search)"/><Topic description="Constraint satisfaction (backtracking and local search methods)"/></KnowledgeUnit><KnowledgeUnit name="Basic Knowledge Representation and Reasoning"><Topic description="Review of propositional and predicate logic (cross-reference DS/Basic Logic)"/><Topic description="Resolution and theorem proving (propositional logic only)"/><Topic description="Forward chaining, backward chaining"/><Topic description="Review of probabilistic reasoning, Bayes theorem (cross-reference with DS/Discrete Probability)"/></KnowledgeUnit><KnowledgeUnit name="Basic Machine Learning"><Topic description="Definition and examples of broad variety of machine learning tasks, including classification"/><Topic description="Inductive learning"/><Topic description="Simple statistical-based learning, such as Naive Bayesian Classifier, decision trees"/><Topic description="The over-fitting problem"/><Topic description="Measuring classifier accuracy"/></KnowledgeUnit><KnowledgeUnit name="Advanced Search"><Topic description="Constructing search trees, dynamic search space, combinatorial explosion of search space"/><Topic description="Stochastic search"><Subtopic description="Simulated annealing"/><Subtopic description="Genetic algorithms"/><Subtopic description="Monte-Carlo tree search"/></Topic><Topic description="Implementation of A* search, beam search"/><Topic description="Minimax search, alpha-beta pruning"/><Topic description="Expectimax search (MDP-solving) and chance nodes"/></KnowledgeUnit><KnowledgeUnit name="Advanced Representation and Reasoning"><Topic description="Knowledge representation issues"><Subtopic description="Description logics"/><Subtopic description="Ontology engineering"/></Topic><Topic description="Non-monotonic reasoning (e.g., non-classical logics, default reasoning)"/><Topic description="Argumentation"/><Topic description="Reasoning about action and change (e.g., situation and event calculus)"/><Topic description="Temporal and spatial reasoning"/><Topic description="Rule-based Expert Systems"/><Topic description="Semantic networks"/><Topic description="Model-based and Case-based reasoning"/><Topic description="Planning:"><Subtopic description="Partial and totally ordered planning"/><Subtopic description="Plan graphs"/><Subtopic description="Hierarchical planning"/><Subtopic description="Planning and execution including conditional planning and continuous planning"/><Subtopic description="Mobile agent/Multi-agent planning"/></Topic></KnowledgeUnit><KnowledgeUnit name="Reasoning Under Uncertainty"><Topic description="Review of basic probability (cross-reference DS/Discrete Probability)"/><Topic description="Random variables and probability distributions"><Subtopic description="Axioms of probability"/><Subtopic description="Probabilistic inference"/><Subtopic description="Bayes' Rule"/></Topic><Topic description="Conditional Independence"/><Topic description="Knowledge representations"><Subtopic description="Bayesian Networks"><Subtopic description="Exact inference and its complexity"/><Subtopic description="Randomized sampling (Monte Carlo) methods (e.g. Gibbs sampling)"/></Subtopic><Subtopic description="Markov Networks"/><Subtopic description="Relational probability models"/><Subtopic description="Hidden Markov Models"/></Topic><Topic description="Decision Theory"><Subtopic description="Preferences and utility functions"/><Subtopic description="Maximizing expected utility"/></Topic></KnowledgeUnit><KnowledgeUnit name="Agents"><Topic description="Definitions of agents"/><Topic description="Agent architectures (e.g., reactive, layered, cognitive)"/><Topic description="Agent theory"/><Topic description="Rationality, game theory"><Subtopic description="Decision-theoretic agents"/><Subtopic description="Markov decision processes (MDP)"/></Topic><Topic description="Software agents, personal assistants, and information access"><Subtopic description="Collaborative agents"/><Subtopic description="Information-gathering agents"/><Subtopic description="Believable agents (synthetic characters, modeling emotions in agents)"/></Topic><Topic description="Learning agents"/><Topic description="Multi-agent systems"><Subtopic description="Collaborating agents"/><Subtopic description="Agent teams"/><Subtopic description="Competitive agents (e.g., auctions, voting)"/><Subtopic description="Swarm systems and biologically inspired models"/></Topic></KnowledgeUnit><KnowledgeUnit name="Natural Language Processing"><Topic description="Deterministic and stochastic grammars"/><Topic description="Parsing algorithms"><Subtopic description="CFGs and chart parsers (e.g. CYK)"/><Subtopic description="Probabilistic CFGs and weighted CYK"/></Topic><Topic description="Representing meaning / Semantics"><Subtopic description="Logic-based knowledge representations"/><Subtopic description="Semantic roles"/><Subtopic description="Temporal representations"/><Subtopic description="Beliefs, desires, and intentions"/></Topic><Topic description="Corpus-based methods"/><Topic description="N-grams and HMMs"/><Topic description="Smoothing and backoff"/><Topic description="Examples of use: POS tagging and morphology"/><Topic description="Information retrieval (Cross-reference IM/Information Storage and Retrieval)"><Subtopic description="Vector space model"><Subtopic description="TF &amp; IDF"/></Subtopic><Subtopic description="Precision and recall"/></Topic><Topic description="Information extraction"/><Topic description="Language translation"/><Topic description="Text classification, categorization"><Subtopic description="Bag of words model"/></Topic></KnowledgeUnit><KnowledgeUnit name="Advanced Machine Learning"><Topic description="Definition and examples of broad variety of machine learning tasks"/><Topic description="General statistical-based learning, parameter estimation (maximum likelihood)"/><Topic description="Inductive logic programming (ILP)"/><Topic description="Supervised learning"><Subtopic description="Learning decision trees"/><Subtopic description="Learning neural networks"/><Subtopic description="Support vector machines (SVMs)"/></Topic><Topic description="Ensembles"/><Topic description="Nearest-neighbor algorithms"/><Topic description="Unsupervised Learning and clustering"><Subtopic description="EM"/><Subtopic description="K-means"/><Subtopic description="Self-organizing maps"/></Topic><Topic description="Semi-supervised learning"/><Topic description="Learning graphical models (Cross-reference IS/Reasoning under Uncertainty)"/><Topic description="Performance evaluation (such as cross-validation, area under ROC curve)"/><Topic description="Learning theory"/><Topic description="The problem of overfitting, the curse of dimensionality"/><Topic description="Reinforcement learning"><Subtopic description="Exploration vs. exploitation trade-off"/><Subtopic description="Markov decision processes Value and policy iteration"/></Topic><Topic description="Application of Machine Learning algorithms to Data Mining (cross-reference IM/Data Mining)"/></KnowledgeUnit><KnowledgeUnit name="Robotics"><Topic description="Overview: problems and progress"><Subtopic description="State-of-the-art robot systems, including their sensors and an overview of their sensor processing"/><Subtopic description="Robot control architectures, e.g., deliberative vs. reactive control and Braitenberg vehicles"/><Subtopic description="World modeling and world models"/><Subtopic description="Inherent uncertainty in sensing and in control"/></Topic><Topic description="Configuration space and environmental maps"/><Topic description="Interpreting uncertain sensor data"/><Topic description="Localizing and mapping"/><Topic description="Navigation and control"/><Topic description="Motion planning"/><Topic description="Multiple-robot coordination"/></KnowledgeUnit><KnowledgeUnit name="Perception and Computer Vision"><Topic description="Computer vision"><Subtopic description="Image acquisition, representation, processing and properties"/><Subtopic description="Shape representation, object recognition and segmentation"/><Subtopic description="Motion analysis"/></Topic><Topic description="Audio and speech recognition"/><Topic description="Modularity in recognition"/><Topic description="Approaches to pattern recognition (cross-reference IS/Advanced Machine Learning)"><Subtopic description="Classification algorithms and measures of classification quality"/><Subtopic description="Statistical techniques"/></Topic></KnowledgeUnit></CompetencyArea><CompetencyArea name="Networking and Communication "><KnowledgeUnit name="Introduction"><Topic description="Organization of the Internet (Internet Service Providers, Content Providers, etc.)"/><Topic description="Switching techniques (e.g., circuit, packet)"/><Topic description="Physical pieces of a network, including hosts, routers, switches, ISPs, wireless, LAN, access point, and firewalls"/><Topic description="Layering principles (encapsulation, multiplexing)"/><Topic description="Roles of the different layers (application, transport, network, datalink, physical)"/></KnowledgeUnit><KnowledgeUnit name="Networked Applications"><Topic description="Naming and address schemes (DNS, IP addresses, Uniform Resource Identifiers, etc.)"/><Topic description="Distributed applications (client/server, peer-to-peer, cloud, etc.)"/><Topic description="HTTP as an application layer protocol"/><Topic description="Multiplexing with TCP and UDP"/><Topic description="Socket APIs"/></KnowledgeUnit><KnowledgeUnit name="Reliable Data Delivery"><Topic description="Error control (retransmission techniques, timers)"/><Topic description="Flow control (acknowledgements, sliding window)"/><Topic description="Performance issues (pipelining)"/><Topic description="TCP"/></KnowledgeUnit><KnowledgeUnit name="Routing and Forwarding"><Topic description="Routing versus forwarding"/><Topic description="Static routing"/><Topic description="Internet Protocol (IP)"/><Topic description="Scalability issues (hierarchical addressing)"/></KnowledgeUnit><KnowledgeUnit name="Local Area Networks"><Topic description="Multiple Access Problem"/><Topic description="Common approaches to multiple access (exponential-backoff, time division multiplexing, etc)"/><Topic description="Local Area Networks"/><Topic description="Ethernet"/><Topic description="Switching"/></KnowledgeUnit><KnowledgeUnit name="Resource Allocation"><Topic description="Need for resource allocation"/><Topic description="Fixed allocation (TDM, FDM, WDM) versus dynamic allocation"/><Topic description="End-to-end versus network assisted approaches"/><Topic description="Fairness"/><Topic description="Principles of congestion control"/><Topic description="Approaches to Congestion (e.g., Content Distribution Networks)"/></KnowledgeUnit><KnowledgeUnit name="Mobility"><Topic description="Principles of cellular networks"/><Topic description="802.11 networks"/><Topic description="Issues in supporting mobile nodes (home agents)"/></KnowledgeUnit><KnowledgeUnit name="Social Networking"><Topic description="Social networks overview"/><Topic description="Example social network platforms"/><Topic description="Structure of social network graphs"/><Topic description="Social network analysis"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Operating Systems "><KnowledgeUnit name="Overview of Operating Systems"><Topic description="Role and purpose of the operating system"/><Topic description="Functionality of a typical operating system"/><Topic description="Mechanisms to support  client-server models, hand-held devices"/><Topic description="Design issues (efficiency, robustness, flexibility, portability, security, compatibility)"/><Topic description="Influences of security, networking, multimedia, windowing systems"/></KnowledgeUnit><KnowledgeUnit name="Operating System Principles"><Topic description="Structuring methods (monolithic, layered, modular, micro-kernel models)"/><Topic description="Abstractions, processes, and resources"/><Topic description="Concepts of application program interfaces (APIs)"/><Topic description="The evolution of hardware/software techniques and application needs"/><Topic description="Device organization"/><Topic description="Interrupts: methods and implementations"/><Topic description="Concept of user/system state and protection, transition to kernel mode"/></KnowledgeUnit><KnowledgeUnit name="Concurrency"><Topic description="States and state diagrams (cross-reference SF/State and State Machines)"/><Topic description="Structures (ready list, process control blocks, and so forth)"/><Topic description="Dispatching and context switching"/><Topic description="The role of interrupts"/><Topic description="Managing atomic access to OS objects"/><Topic description="Implementing synchronization primitives"/><Topic description="Multiprocessor issues (spin-locks, reentrancy) (cross-reference SF/Parallelism)"/></KnowledgeUnit><KnowledgeUnit name="Scheduling and Dispatch"><Topic description="Preemptive and non-preemptive scheduling (cross-reference SF/Resource Allocation and Scheduling, PD/Parallel Performance)"/><Topic description="Schedulers and policies (cross-reference SF/Resource Allocation and Scheduling, PD/Parallel Performance)"/><Topic description="Processes and threads (cross-reference SF/Computational paradigms)"/><Topic description="Deadlines and real-time issues"/></KnowledgeUnit><KnowledgeUnit name="Memory Management"><Topic description="Review of physical memory and memory management hardware"/><Topic description="Working sets and thrashing"/><Topic description="Caching (cross-reference AR/Memory System Organization and Architecture)"/></KnowledgeUnit><KnowledgeUnit name="Security and Protection"><Topic description="Overview of system security"/><Topic description="Policy/mechanism separation"/><Topic description="Security methods and devices"/><Topic description="Protection, access control, and authentication"/><Topic description="Backups"/></KnowledgeUnit><KnowledgeUnit name="Virtual Machines"><Topic description="Types of virtualization (including Hardware/Software, OS, Server, Service, Network)"/><Topic description="Paging and virtual memory"/><Topic description="Virtual file systems"/><Topic description="Hypervisors"/><Topic description="Portable virtualization; emulation vs. isolation"/><Topic description="Cost of virtualization"/></KnowledgeUnit><KnowledgeUnit name="Device Management"><Topic description="Characteristics of serial and parallel devices"/><Topic description="Abstracting device differences"/><Topic description="Buffering strategies"/><Topic description="Direct memory access"/><Topic description="Recovery from failures"/></KnowledgeUnit><KnowledgeUnit name="File Systems"><Topic description="Files: data, metadata, operations, organization, buffering, sequential, nonsequential"/><Topic description="Directories: contents and structure"/><Topic description="File systems: partitioning, mount/unmount, virtual file systems"/><Topic description="Standard implementation techniques"/><Topic description="Memory-mapped files"/><Topic description="Special-purpose file systems"/><Topic description="Naming, searching, access, backups"/><Topic description="Journaling and log-structured file systems"/></KnowledgeUnit><KnowledgeUnit name="Real Time and Embedded Systems"><Topic description="Process and task scheduling"/><Topic description="Memory/disk management requirements in a real-time environment"/><Topic description="Failures, risks, and recovery"/><Topic description="Special concerns in real-time systems"/></KnowledgeUnit><KnowledgeUnit name="Fault Tolerance"><Topic description="Fundamental concepts: reliable and available systems (cross-reference SF/Reliability through Redundancy)"/><Topic description="Spatial and temporal redundancy (cross-reference SF/Reliability through Redundancy)"/><Topic description="Methods used to implement fault tolerance"/><Topic description="Examples of OS mechanisms for detection, recovery, restart to implement fault tolerance, use of these techniques for the OS's own services"/></KnowledgeUnit><KnowledgeUnit name="System Performance Evaluation"><Topic description="Why system performance needs to be evaluated (cross-reference SF/Performance/Figures of performance merit)"/><Topic description="What is to be evaluated (cross-reference SF/Performance/Figures of performance merit)"/><Topic description="Systems performance policies, e.g., caching, paging, scheduling, memory management, and security"/><Topic description="Evaluation models: deterministic, analytic, simulation, or implementation-specific"/><Topic description="How to collect evaluation data (profiling and tracing mechanisms)"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Platform-Based Development "><KnowledgeUnit name="Introduction"><Topic description="Overview of platforms (e.g., Web, Mobile, Game, Industrial)"/><Topic description="Programming via platform-specific APIs"/><Topic description="Overview of Platform Languages (e.g., Objective C, HTML5)"/><Topic description="Programming under platform constraints"/></KnowledgeUnit><KnowledgeUnit name="Web Platforms"><Topic description="Web programming languages (e.g., HTML5, Java Script, PHP, CSS)"/><Topic description="Web platform constraints"/><Topic description="Software as a Service (SaaS)"/><Topic description="Web standards"/></KnowledgeUnit><KnowledgeUnit name="Mobile Platforms"><Topic description="Mobile programming languages"/><Topic description="Challenges with mobility and wireless communication"/><Topic description="Location-aware applications"/><Topic description="Performance / power tradeoffs"/><Topic description="Mobile platform constraints"/><Topic description="Emerging technologies"/></KnowledgeUnit><KnowledgeUnit name="Industrial Platforms"><Topic description="Types of Industrial Platforms (e.g., Mathematic, Robotic, Industrial Control)"/><Topic description="Robotic software and its architecture"/><Topic description="Domain-specific languages"/><Topic description="Industrial platform constraints"/></KnowledgeUnit><KnowledgeUnit name="Game Platforms"><Topic description="Types of game platforms (e.g., XBox, Wii, PlayStation)"/><Topic description="Game platform languages (e.g., C++, Java, Lua, Python)"/><Topic description="Game platform constraints"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Parallel and Distributed Computing "><KnowledgeUnit name="Parallelism Fundamentals"><Topic description="Multiple simultaneous computations"/><Topic description="Goals of parallelism (e.g., throughput) versus concurrency (e.g., controlling access to shared resources)"/><Topic description="Parallelism, communication, and coordination"><Subtopic description="Programming constructs for coordinating multiple simultaneous computations"/><Subtopic description="Need for synchronization"/></Topic><Topic description="Programming errors not found in sequential programming"><Subtopic description="Data races (simultaneous read/write or write/write of shared state)"/><Subtopic description="Higher-level races (interleavings violating program intention, undesired non-determinism)"/><Subtopic description="Lack of liveness/progress (deadlock, starvation)"/></Topic></KnowledgeUnit><KnowledgeUnit name="Parallel Decomposition"><Topic description="Need for communication and coordination/synchronization"/><Topic description="Independence and partitioning"/><Topic description="Basic knowledge of parallel decomposition concepts (cross-reference SF/System Support for Parallelism)"/><Topic description="Task-based decomposition"><Subtopic description="Implementation strategies such as threads"/></Topic><Topic description="Data-parallel decomposition"><Subtopic description="Strategies such as SIMD and MapReduce"/></Topic><Topic description="Actors and reactive processes (e.g., request handlers)"/></KnowledgeUnit><KnowledgeUnit name="Communication and Coordination"><Topic description="Shared Memory"/><Topic description="Consistency, and its role in programming language guarantees for data-race-free programs"/><Topic description="Message passing"><Subtopic description="Point-to-point versus multicast (or event-based) messages"/><Subtopic description="Blocking versus non-blocking styles for sending and receiving messages"/><Subtopic description="Message buffering (cross-reference PF/Fundamental Data Structures/Queues)"/></Topic><Topic description="Atomicity"><Subtopic description="Specifying and testing atomicity and safety requirements"/><Subtopic description="Granularity of atomic accesses and updates, and the use of constructs such as critical sections or transactions to describe them"/><Subtopic description="Mutual Exclusion using locks, semaphores, monitors, or related constructs"><Subtopic description="Potential for liveness failures and deadlock (causes, conditions, prevention)"/></Subtopic></Topic><Topic description="Composition"><Subtopic description="Composing larger granularity atomic actions using synchronization"/><Subtopic description="Transactions, including optimistic and conservative approaches"/></Topic><Topic description="Consensus"><Subtopic description="(Cyclic) barriers, counters, or related constructs"/></Topic><Topic description="Conditional actions"><Subtopic description="Conditional waiting (e.g., using condition variables)"/></Topic></KnowledgeUnit><KnowledgeUnit name="Parallel Algorithms, Analysis, and Programming"><Topic description="Critical paths, work and span, and the relation to Amdahl's law (cross-reference SF/Performance)"/><Topic description="Speed-up and scalability"/><Topic description="Naturally (embarrassingly) parallel algorithms"/><Topic description="Parallel algorithmic patterns (divide-and-conquer, map and reduce, master-workers, others)"><Subtopic description="Specific algorithms (e.g., parallel MergeSort)"/></Topic><Topic description="Parallel graph algorithms (e.g., parallel shortest path, parallel spanning tree) (cross-reference AL/Algorithmic Strategies/Divide-and-conquer)"/><Topic description="Parallel matrix computations"/><Topic description="Producer-consumer and pipelined algorithms"/><Topic description="Examples of non-scalable parallel algorithms"/></KnowledgeUnit><KnowledgeUnit name="Parallel Architecture"/><KnowledgeUnit name="Parallel Performance"><Topic description="Load balancing"/><Topic description="Performance measurement"/><Topic description="Scheduling and contention (cross-reference OS/Scheduling and Dispatch)"/><Topic description="Evaluating communication overhead"/><Topic description="Data management"><Subtopic description="Non-uniform communication costs due to proximity (cross-reference SF/Proximity)"/><Subtopic description="Cache effects (e.g., false sharing)"/><Subtopic description="Maintaining spatial locality"/></Topic><Topic description="Power usage and management"/></KnowledgeUnit><KnowledgeUnit name="Distributed Systems"><Topic description="Faults (cross-reference OS/Fault Tolerance)"><Subtopic description="Network-based (including partitions) and node-based failures"/><Subtopic description="Impact on system-wide guarantees (e.g., availability)"/></Topic><Topic description="Distributed message sending"><Subtopic description="Data conversion and transmission"/><Subtopic description="Sockets"/><Subtopic description="Message sequencing"/><Subtopic description="Buffering, retrying, and dropping messages"/></Topic><Topic description="Distributed system design tradeoffs"><Subtopic description="Latency versus throughput"/><Subtopic description="Consistency, availability, partition tolerance"/></Topic><Topic description="Distributed service design"><Subtopic description="Stateful versus stateless protocols and services"/><Subtopic description="Session (connection-based) designs"/><Subtopic description="Reactive (IO-triggered) and multithreaded designs"/></Topic><Topic description="Core distributed algorithms"><Subtopic description="Election, discovery"/></Topic></KnowledgeUnit><KnowledgeUnit name="Cloud Computing"><Topic description="Internet-Scale computing"><Subtopic description="Task partitioning (cross-reference PD/Parallel Algorithms, Analysis, and Programming)"/><Subtopic description="Data access"/><Subtopic description="Clusters, grids, and meshes"/></Topic><Topic description="Cloud services"><Subtopic description="Infrastructure as a service"><Subtopic description="Elasticity of resources"/><Subtopic description="Platform APIs"/></Subtopic><Subtopic description="Software as a service"/><Subtopic description="Security"/><Subtopic description="Cost management"/></Topic><Topic description="Virtualization (cross-reference SF/Virtualization and Isolation and OS/Virtual Machines)"><Subtopic description="Shared resource management"/><Subtopic description="Migration of processes"/></Topic><Topic description="Cloud-based data storage"><Subtopic description="Shared access to weakly consistent data stores"/><Subtopic description="Data synchronization"/><Subtopic description="Data partitioning"/><Subtopic description="Distributed file systems (cross-reference IM/Distributed Databases)"/><Subtopic description="Replication"/></Topic></KnowledgeUnit><KnowledgeUnit name="Formal Models and Semantics"><Topic description="Formal models of processes and message passing, including algebras such as Communicating Sequential Processes (CSP) and pi-calculus"/><Topic description="Formal models of parallel computation, including the Parallel Random Access Machine (PRAM) and alternatives such as Bulk Synchronous Parallel (BSP)"/><Topic description="Formal models of computational dependencies"/><Topic description="Models of (relaxed) shared memory consistency and their relation to programming language specifications"/><Topic description="Algorithmic correctness criteria including linearizability"/><Topic description="Models of algorithmic progress, including non-blocking guarantees and fairness"/><Topic description="Techniques for specifying and checking correctness properties such as atomicity and freedom from data races"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Programming Languages "><KnowledgeUnit name="Object-Oriented Programming"><Topic description="Object-oriented design"><Subtopic description="Decomposition into objects carrying state and having behavior"/><Subtopic description="Class-hierarchy design for modeling"/></Topic><Topic description="Definition of classes: fields, methods, and constructors"/><Topic description="Subclasses, inheritance, and method overriding"/><Topic description="Dynamic dispatch: definition of method-call"/><Topic description="Subtyping (cross-reference PL/Type Systems)"><Subtopic description="Subtype polymorphism; implicit upcasts in typed languages"/><Subtopic description="Notion of behavioral replacement: subtypes acting like supertypes"/><Subtopic description="Relationship between subtyping and inheritance"/></Topic><Topic description="Object-oriented idioms for encapsulation"><Subtopic description="Privacy and visibility of class members"/><Subtopic description="Interfaces revealing only method signatures"/><Subtopic description="Abstract base classes"/></Topic><Topic description="Using collection classes, iterators, and other common library components"/></KnowledgeUnit><KnowledgeUnit name="Functional Programming"><Topic description="Effect-free programming"><Subtopic description="Function calls have no side effects, facilitating compositional reasoning"/><Subtopic description="Variables are immutable, preventing unexpected changes to program data by other code"/><Subtopic description="Data can be freely aliased or copied without introducing unintended effects from mutation"/></Topic><Topic description="Processing structured data (e.g., trees) via functions with cases for each data variant"><Subtopic description="Associated language constructs such as discriminated unions and pattern-matching over them"/><Subtopic description="Functions defined over compound data in terms of functions applied to the constituent pieces"/></Topic><Topic description="First-class functions (taking, returning, and storing functions)"/><Topic description="Function closures (functions using variables in the enclosing lexical environment)"><Subtopic description="Basic meaning and definition -- creating closures at run-time by capturing the environment"/><Subtopic description="Canonical idioms: call-backs, arguments to iterators, reusable code via function arguments"/><Subtopic description="Using a closure to encapsulate data in its environment"/><Subtopic description="Currying and partial application"/></Topic><Topic description="Defining higher-order operations on aggregates, especially map, reduce/fold, and filter"/></KnowledgeUnit><KnowledgeUnit name="Event-Driven and Reactive Programming"><Topic description="Events and event handlers"/><Topic description="Canonical uses such as GUIs, mobile devices, robots, servers"/><Topic description="Using a reactive framework"><Subtopic description="Defining event handlers/listeners"/><Subtopic description="Main event loop not under event-handler-writer's control"/></Topic><Topic description="Externally-generated events and program-generated events"/><Topic description="Separation of model, view, and controller"/></KnowledgeUnit><KnowledgeUnit name="Basic Type Systems"><Topic description="A type as a set of values together with a set of operations"><Subtopic description="Primitive types (e.g., numbers, Booleans)"/><Subtopic description="Compound types built from other types (e.g., records, unions, arrays, lists, functions, references)"/></Topic><Topic description="Association of types to variables, arguments, results, and fields"/><Topic description="Type safety and errors caused by using values inconsistently given their intended types"/><Topic description="Goals and limitations of static typing"><Subtopic description="Eliminating some classes of errors without running the program"/><Subtopic description="Undecidability means static analysis must conservatively approximate program behavior"/></Topic><Topic description="Generic types (parametric polymorphism)"><Subtopic description="Definition"/><Subtopic description="Use for generic libraries such as collections"/><Subtopic description="Comparison with ad hoc polymorphism (overloading) and subtype polymorphism"/></Topic><Topic description="Complementary benefits of static and dynamic typing"><Subtopic description="Errors early vs. errors late/avoided"/></Topic><Topic description="Enforce invariants during code development and code maintenance vs. postpone typing decisions while prototyping and conveniently allow flexible coding patterns such as heterogeneous collections"/><Topic description="Avoid misuse of code vs. allow more code reuse"/><Topic description="Detect incomplete programs vs. allow incomplete programs to run"/></KnowledgeUnit><KnowledgeUnit name="Program Representation"><Topic description="Programs that take (other) programs as input such as interpreters, compilers, type-checkers, documentation generators"/><Topic description="Abstract syntax trees; contrast with concrete syntax"/><Topic description="Data structures to represent code for execution, translation, or transmission"/></KnowledgeUnit><KnowledgeUnit name="Language Translation and Execution"><Topic description="Interpretation vs. compilation to native code vs. compilation to portable intermediate representation"/><Topic description="Language translation pipeline: parsing, optional type-checking, translation, linking, execution"><Subtopic description="Execution as native code or within a virtual machine"/><Subtopic description="Alternatives like dynamic loading and dynamic (or 'just-in-time') code generation"/></Topic><Topic description="Run-time representation of core language constructs such as objects (method tables) and first-class functions (closures)"/><Topic description="Run-time layout of memory: call-stack, heap, static data"><Subtopic description="Implementing loops, recursion, and tail calls"/></Topic><Topic description="Memory management"><Subtopic description="Manual memory management: allocating, de-allocating, and reusing heap memory"/><Subtopic description="Automated memory management: garbage collection as an automated technique using the notion of reachability"/></Topic></KnowledgeUnit><KnowledgeUnit name="Syntax Analysis"><Topic description="Scanning (lexical analysis) using regular expressions"/><Topic description="Parsing strategies including top-down (e.g., recursive descent, Earley parsing, or LL) and bottom-up (e.g., backtracking or LR) techniques; role of context-free grammars"/><Topic description="Generating scanners and parsers from declarative specifications"/></KnowledgeUnit><KnowledgeUnit name="Compiler Semantic Analysis"><Topic description="High-level program representations such as abstract syntax trees"/><Topic description="Scope and binding resolution"/><Topic description="Type checking"/><Topic description="Declarative specifications such as attribute grammars"/></KnowledgeUnit><KnowledgeUnit name="Code Generation"><Topic description="Procedure calls and method dispatching"/><Topic description="Separate compilation; linking"/><Topic description="Instruction selection"/><Topic description="Instruction scheduling"/><Topic description="Register allocation"/><Topic description="Peephole optimization"/></KnowledgeUnit><KnowledgeUnit name="Runtime Systems"><Topic description="Dynamic memory management approaches and techniques: malloc/free, garbage collection (mark-sweep, copying, reference counting), regions (also known as arenas or zones)"/><Topic description="Data layout for objects and activation records"/><Topic description="Just-in-time compilation and dynamic recompilation"/><Topic description="Other common features of virtual machines, such as class loading, threads, and security."/></KnowledgeUnit><KnowledgeUnit name="Static Analysis"><Topic description="Relevant program representations, such as basic blocks, control-flow graphs, def-use chains, and static single assignment"/><Topic description="Undecidability and consequences for program analysis"/><Topic description="Flow-insensitive analyses, such as type-checking and scalable pointer and alias analyses"/><Topic description="Flow-sensitive analyses, such as forward and backward dataflow analyses"/><Topic description="Path-sensitive analyses, such as software model checking"/><Topic description="Tools and frameworks for defining analyses"/><Topic description="Role of static analysis in program optimization"/><Topic description="Role of static analysis in (partial) verification and bug-finding"/></KnowledgeUnit><KnowledgeUnit name="Advanced Programming Constructs"><Topic description="Lazy evaluation and infinite streams"/><Topic description="Control Abstractions: Exception Handling, Continuations, Monads"/><Topic description="Object-oriented abstractions: Multiple inheritance, Mixins, Traits, Multimethods"/><Topic description="Metaprogramming: Macros, Generative programming, Model-based development"/><Topic description="Module systems"/><Topic description="String manipulation via pattern-matching (regular expressions)"/><Topic description="Dynamic code evaluation ('eval')"/><Topic description="Language support for checking assertions, invariants, and pre/post-conditions"/></KnowledgeUnit><KnowledgeUnit name="Concurrency and Parallelism"><Topic description="Constructs for thread-shared variables and shared-memory synchronization"/><Topic description="Actor models"/><Topic description="Futures"/><Topic description="Language support for data parallelism"/><Topic description="Models for passing messages between sequential processes"/><Topic description="Effect of memory-consistency models on language semantics and correct code generation"/></KnowledgeUnit><KnowledgeUnit name="Type Systems"><Topic description="Compositional type constructors, such as product types (for aggregates), sum types (for unions), function types, quantified types, and recursive types"/><Topic description="Type checking"/><Topic description="Type safety as preservation plus progress"/><Topic description="Type inference"/><Topic description="Static overloading"/></KnowledgeUnit><KnowledgeUnit name="Formal Semantics"><Topic description="Syntax vs. semantics"/><Topic description="Lambda Calculus"/><Topic description="Approaches to semantics: Operational, Denotational, Axiomatic"/><Topic description="Proofs by induction over language semantics"/><Topic description="Formal definitions and proofs for type systems (cross-reference PL/Type Systems)"/><Topic description="Parametricity (cross-reference PL/Type Systems)"/><Topic description="Using formal semantics for systems modeling"/></KnowledgeUnit><KnowledgeUnit name="Language Pragmatics"><Topic description="Principles of language design such as orthogonality"/><Topic description="Evaluation order, precedence, and associativity"/><Topic description="Eager vs. delayed evaluation"/><Topic description="Defining control and iteration constructs"/><Topic description="External calls and system libraries"/></KnowledgeUnit><KnowledgeUnit name="Logic Programming"><Topic description="Clausal representation of data structures and algorithms"/><Topic description="Unification"/><Topic description="Backtracking and search"/><Topic description="Cuts"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Software Development Fundamentals "><KnowledgeUnit name="Algorithms and Design"><Topic description="The concept and properties of algorithms"><Subtopic description="Informal comparison of algorithm efficiency (e.g., operation counts)"/></Topic><Topic description="The role of algorithms in the problem-solving process"/><Topic description="Problem-solving strategies"><Subtopic description="Iterative and recursive mathematical functions"/><Subtopic description="Iterative and recursive traversal of data structures"/><Subtopic description="Divide-and-conquer strategies"/></Topic><Topic description="Fundamental design concepts and principles"><Subtopic description="Abstraction"/><Subtopic description="Program decomposition"/><Subtopic description="Encapsulation and information hiding"/><Subtopic description="Separation of behavior and implementation"/></Topic></KnowledgeUnit><KnowledgeUnit name="Fundamental Programming Concepts"><Topic description="Basic syntax and semantics of a higher-level language"/><Topic description="Variables and primitive data types (e.g., numbers, characters, Booleans)"/><Topic description="Expressions and assignments"/><Topic description="Simple I/including file I/O"/><Topic description="Conditional and iterative control structures"/><Topic description="Functions and parameter passing"/><Topic description="The concept of recursion"/></KnowledgeUnit><KnowledgeUnit name="Fundamental Data Structures"><Topic description="Arrays"/><Topic description="Records/structs (heterogeneous aggregates)"/><Topic description="Strings and string processing"/><Topic description="Abstract data types and their implementation"><Subtopic description="Stacks"/><Subtopic description="Queues"/><Subtopic description="Priority queues Sets"/><Subtopic description="Maps"/></Topic><Topic description="References and aliasing"/><Topic description="Linked lists"/><Topic description="Strategies for choosing the appropriate data structure"/></KnowledgeUnit><KnowledgeUnit name="Development Methods"><Topic description="Program comprehension"/><Topic description="Program correctness"><Subtopic description="Types of errors (syntax, logic, run-time)"/><Subtopic description="The concept of a specification"/><Subtopic description="Defensive programming (e.g. secure coding, exception handling)"/><Subtopic description="Code reviews"/><Subtopic description="Testing fundamentals and test-case generation"/><Subtopic description="The role and the use of contracts, including pre- and post-conditions"/><Subtopic description="Unit testing"/></Topic><Topic description="Simple refactoring"/><Topic description="Modern programming environments"><Subtopic description="Code search"/><Subtopic description="Programming using library components and their APIs"/></Topic><Topic description="Debugging strategies"/><Topic description="Documentation and program style"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Software Engineering "><KnowledgeUnit name="Software Processes"><Topic description="Systems level considerations, i.e., the interaction of software with its intended environment (cross-reference IAS/Secure Software Engineering)"/><Topic description="Introduction to software process models (e.g., waterfall, incremental, agile)"><Subtopic description="Activities within software lifecycles"/></Topic><Topic description="Programming in the large vs. individual programming"/><Topic description="Evaluation of software process models"/><Topic description="Software quality concepts"/><Topic description="Process improvement"/><Topic description="Software process capability maturity models"/><Topic description="Software process measurements"/></KnowledgeUnit><KnowledgeUnit name="Software Project Management"><Topic description="Team participation"><Subtopic description="Team processes including responsibilities for tasks, meeting structure, and work schedule"/><Subtopic description="Roles and responsibilities in a software team"/><Subtopic description="Team conflict resolution"/><Subtopic description="Risks associated with virtual teams (communication, perception, structure)"/></Topic><Topic description="Effort Estimation (at the personal level)"/><Topic description="Risk (cross reference IAS/Secure Software Engineering)"><Subtopic description="The role of risk in the lifecycle"/><Subtopic description="Risk categories including security, safety, market, financial, technology, people, quality, structure and process"/></Topic><Topic description="Team management"><Subtopic description="Team organization and decision-making"/><Subtopic description="Role identification and assignment"/><Subtopic description="Individual and team performance assessment"/></Topic><Topic description="Project management"><Subtopic description="Scheduling and tracking"/><Subtopic description="Project management tools"/><Subtopic description="Cost/benefit analysis"/></Topic><Topic description="Software measurement and estimation techniques"/><Topic description="Software quality assurance and the role of measurements"/><Topic description="Risk"><Subtopic description="Risk identification and management"/><Subtopic description="Risk analysis and evaluation"/><Subtopic description="Risk tolerance (e.g., risk-adverse, risk-neutral, risk-seeking)"/><Subtopic description="Risk planning"/></Topic><Topic description="System-wide approach to risk including hazards associated with tools"/></KnowledgeUnit><KnowledgeUnit name="Tools and Environments"><Topic description="Software configuration management and version control"/><Topic description="Release management"/><Topic description="Requirements analysis and design modeling tools"/><Topic description="Testing tools including static and dynamic analysis tools"/><Topic description="Programming environments that automate parts of program construction processes (e.g., automated builds)"><Subtopic description="Continuous integration"/></Topic><Topic description="Tool integration concepts and mechanisms"/></KnowledgeUnit><KnowledgeUnit name="Requirements Engineering"><Topic description="Describing functional requirements using, for example, use cases or users stories"/><Topic description="Properties of requirements including consistency, validity, completeness, and feasibility"/><Topic description="Software requirements elicitation"/><Topic description="Describing system data using, for example, class diagrams or entity-relationship diagrams"/><Topic description="Non-functional requirements and their relationship to software quality (cross-reference IAS/Secure Software Engineering)"/><Topic description="Evaluation and use of requirements specifications"/><Topic description="Requirements analysis modeling techniques"/><Topic description="Acceptability of certainty / uncertainty considerations regarding software / system behavior"/><Topic description="Prototyping"/><Topic description="Basic concepts of formal requirements specification"/><Topic description="Requirements specification"/><Topic description="Requirements validation"/><Topic description="Requirements tracing"/></KnowledgeUnit><KnowledgeUnit name="Software Design"><Topic description="System design principles: levels of abstraction (architectural design and detailed design), separation of concerns, information hiding, coupling and cohesion, re-use of standard structures"/><Topic description="Design Paradigms such as structured design (top-down functional decomposition), object-oriented analysis and design, event driven design, component-level design, data-structured centered, aspect oriented, function oriented, service oriented"/><Topic description="Structural and behavioral models of software designs"/><Topic description="Design patterns"/><Topic description="Relationships between requirements and designs: transformation of models, design of contracts, invariants"/><Topic description="Software architecture concepts and standard architectures (e.g. client-server, n-layer, transform centered, pipes-and-filters)"/><Topic description="Refactoring designs using design patterns"/><Topic description="The use of components in design: component selection, design, adaptation and assembly of components, components and patterns, components and objects (for example, building a GUI using a standard widget set)"/><Topic description="Internal design qualities, and models for them: efficiency and performance, redundancy and fault tolerance, traceability of requirements"/><Topic description="External design qualities, and models for them: functionality, reliability, performance and efficiency, usability, maintainability, portability"/><Topic description="Measurement and analysis of design quality"/><Topic description="Tradeoffs between different aspects of quality"/><Topic description="Application frameworks"/><Topic description="Middleware: the object-oriented paradigm within middleware, object request brokers and marshalling, transaction processing monitors, workflow systems"/><Topic description="Principles of secure design and coding (cross-reference IAS/Principles of Secure Design)"><Subtopic description="Principle of least privilege"/><Subtopic description="Principle of fail-safe defaults"/><Subtopic description="Principle of psychological acceptability"/></Topic></KnowledgeUnit><KnowledgeUnit name="Software Construction"><Topic description="Coding practices: techniques, idioms/patterns, mechanisms for building quality programs (cross-reference IAS/Defensive Programming; SDF/Development Methods)"><Subtopic description="Defensive coding practices"/><Subtopic description="Secure coding practices"/><Subtopic description="Using exception handling mechanisms to make programs more robust, fault-tolerant"/></Topic><Topic description="Coding standards"/><Topic description="Integration strategies"/><Topic description="Development context: 'green field' vs. existing code base"><Subtopic description="Change impact analysis"/><Subtopic description="Change actualization"/></Topic><Topic description="Potential security problems in programs"><Subtopic description="Buffer and other types of overflows Race conditions"/><Subtopic description="Improper initialization, including choice of privileges"/><Subtopic description="Checking input"/><Subtopic description="Assuming success and correctness"/><Subtopic description="Validating assumptions"/></Topic></KnowledgeUnit><KnowledgeUnit name="Software Verification and Validation"><Topic description="Verification and validation concepts"/><Topic description="Inspections, reviews, audits"/><Topic description="Testing types, including human computer interface, usability, reliability, security, conformance to specification (cross-reference IAS/Secure Software Engineering)"/><Topic description="Testing fundamentals (cross-reference SDF/Development Methods)"><Subtopic description="Unit, integration, validation, and system testing"/><Subtopic description="Test plan creation and test case generation"/><Subtopic description="Black-box and white-box testing techniques"/><Subtopic description="Regression testing and test automation"/></Topic><Topic description="Defect tracking"/><Topic description="Limitations of testing in particular domains, such as parallel or safety-critical systems"/><Topic description="Static approaches and dynamic approaches to verification"/><Topic description="Test-driven development"/><Topic description="Validation planning; documentation for validation"/><Topic description="Object-oriented testing; systems testing"/><Topic description="Verification and validation of non-code artifacts (documentation, help files, training materials)"/><Topic description="Fault logging, fault tracking and technical support for such activities"/><Topic description="Fault estimation and testing termination including defect seeding"/></KnowledgeUnit><KnowledgeUnit name="Software Evolution"><Topic description="Software development in the context of large, pre-existing code bases"><Subtopic description="Software change"/><Subtopic description="Concerns and concern location"/><Subtopic description="Refactoring"/></Topic><Topic description="Software evolution"/><Topic description="Characteristics of maintainable software"/><Topic description="Reengineering systems"/><Topic description="Software reuse"><Subtopic description="Code segments"/><Subtopic description="Libraries and frameworks"/><Subtopic description="Components"/><Subtopic description="Product lines"/></Topic></KnowledgeUnit><KnowledgeUnit name="Software Reliability"><Topic description="Software reliability engineering concepts"/><Topic description="Software reliability, system reliability and failure behavior (cross-reference SF/Reliability Through Redundancy)"/><Topic description="Fault lifecycle concepts and techniques"/><Topic description="Software reliability models"/><Topic description="Software fault tolerance techniques and models"/><Topic description="Software reliability engineering practices"/><Topic description="Measurement-based analysis of software reliability"/></KnowledgeUnit><KnowledgeUnit name="Formal Methods"><Topic description="Role of formal specification and analysis techniques in the software development cycle"/><Topic description="Program assertion languages and analysis approaches (including languages for writing and analyzing pre-and post-conditions, such as OCL, JML)"/><Topic description="Formal approaches to software modeling and analysis"><Subtopic description="Model checkers"/><Subtopic description="Model finders"/></Topic><Topic description="Tools in support of formal methods"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Systems Fundamentals "><KnowledgeUnit name="Computational Paradigms"><Topic description="Basic building blocks and components of a computer (gates, flip-flops, registers, interconnections; Datapath + Control + Memory)"/><Topic description="Hardware as a computational paradigm: Fundamental logic building blocks; Logic expressions, minimization, sum of product forms"/><Topic description="Application-level sequential processing: single thread"/><Topic description="Simple application-level parallel processing: request level (web services/client-server/distributed), single thread per server, multiple threads with multiple servers"/><Topic description="Basic concept of pipelining, overlapped processing stages"/><Topic description="Basic concept of scaling: going faster vs. handling larger problems"/></KnowledgeUnit><KnowledgeUnit name="Cross-Layer Communications"><Topic description="Programming abstractions, interfaces, use of libraries"/><Topic description="Distinction between Application and OS services, Remote Procedure Call"/><Topic description="Application-Virtual Machine Interaction"/><Topic description="Reliability"/></KnowledgeUnit><KnowledgeUnit name="State and State Machines"><Topic description="Digital vs. Analog/Discrete vs. Continuous Systems"/><Topic description="Simple logic gates, logical expressions, Boolean logic simplification"/><Topic description="Clocks, State, Sequencing"/><Topic description="Combinational Logic, Sequential Logic, Registers, Memories"/><Topic description="Computers and Network Protocols as examples of state machines"/></KnowledgeUnit><KnowledgeUnit name="Parallelism"><Topic description="Sequential vs. parallel processing"/><Topic description="Parallel programming vs. concurrent programming"/><Topic description="Request parallelism vs. Task parallelism"/><Topic description="Client-Server/Web Services, Thread (Fork-Join), Pipelining"/><Topic description="Multicore architectures and hardware support for synchronization"/></KnowledgeUnit><KnowledgeUnit name="Evaluation"><Topic description="Performance figures of merit"/><Topic description="Workloads and representative benchmarks, and methods of collecting and analyzing performance figures of merit"/><Topic description="CPI (Cycles per Instruction) equation as tool for understanding tradeoffs in the design of instruction sets, processor pipelines, and memory system organizations."/><Topic description="Amdahl's Law: the part of the computation that cannot be sped up limits the effect of the parts that can"/></KnowledgeUnit><KnowledgeUnit name="Resource Allocation and Scheduling"><Topic description="Kinds of resources (e.g., processor share, memory, disk, net bandwidth)"/><Topic description="Kinds of scheduling (e.g., first-come, priority)"/><Topic description="Advantages of fair scheduling, preemptive scheduling"/></KnowledgeUnit><KnowledgeUnit name="Proximity"><Topic description="Speed of light and computers (one foot per nanosecond vs. one GHz clocks)"/><Topic description="Latencies in computer systems: memory vs. disk latencies vs. across the network memory"/><Topic description="Caches and the effects of spatial and temporal locality on performance in processors and systems"/><Topic description="Caches and cache coherency in databases, operating systems, distributed systems, and computer architecture"/><Topic description="Introduction into the processor memory hierarchy and the formula for average memory access time"/></KnowledgeUnit><KnowledgeUnit name="Virtualization and Isolation"><Topic description="Rationale for protection and predictable performance"/><Topic description="Levels of indirection, illustrated by virtual memory for managing physical memory resources"/><Topic description="Methods for implementing virtual memory and virtual machines"/></KnowledgeUnit><KnowledgeUnit name="Reliability through Redundancy"><Topic description="Distinction between bugs and faults"/><Topic description="Redundancy through check and retry"/><Topic description="Redundancy through redundant encoding (error correcting codes, CRC, FEC)"/><Topic description="Duplication/mirroring/replicas"/><Topic description="Other approaches to fault tolerance and availability"/></KnowledgeUnit><KnowledgeUnit name="Quantitative Evaluation"><Topic description="Analytical tools to guide quantitative evaluation"/><Topic description="Order of magnitude analysis (Big-Oh notation)"/><Topic description="Analysis of slow and fast paths of a system"/><Topic description="Events on their effect on performance (e.g., instruction stalls, cache misses, page faults)"/><Topic description="Understanding layered systems, workloads, and platforms, their implications for performance, and the challenges they represent for evaluation"/><Topic description="Microbenchmarking pitfalls"/></KnowledgeUnit></CompetencyArea><CompetencyArea name="Social Issues and Professional Practice "><KnowledgeUnit name="Social Context"><Topic description="Social implications of computing in a networked world (cross-reference HCI/Foundations/social models; IAS/Fundamental Concepts/social issues)"/><Topic description="Impact of social media on individualism, collectivism and culture."/><Topic description="Growth and control of the Internet (cross-reference NC/Introduction/organization of the Internet)"/><Topic description="Often referred to as the digital divide, differences in access to digital technology resources and its resulting ramifications for gender, class, ethnicity, geography, and/or underdeveloped countries."/><Topic description="Accessibility issues, including legal requirements"/><Topic description="Context-aware computing (cross-reference HCI/Design for non-mouse interfaces/ ubiquitous and context-aware)"/></KnowledgeUnit><KnowledgeUnit name="Analytical Tools"><Topic description="Ethical argumentation"/><Topic description="Ethical theories and decision-making"/><Topic description="Moral assumptions and values"/></KnowledgeUnit><KnowledgeUnit name="Professional Ethics"><Topic description="Community values and the laws by which we live"/><Topic description="The nature of professionalism including care, attention and discipline, fiduciary responsibility, and mentoring"/><Topic description="Keeping up-to-date as a computing professional in terms of familiarity, tools, skills, legal and professional framework as well as the ability to self-assess and progress in the computing field"/><Topic description="Professional certification, codes of ethics, conduct, and practice, such as the ACM/IEEE-CS, SE, AITP, IFIP and international societies (cross-reference IAS/Fundamental Concepts/ethical issues)"/><Topic description="Accountability, responsibility and liability (e.g. software correctness, reliability and safety, as well as ethical confidentiality of cybersecurity professionals)"/><Topic description="The role of the computing professional in public policy"/><Topic description="Maintaining awareness of consequences"/><Topic description="Ethical dissent and whistle-blowing"/><Topic description="The relationship between regional culture and ethical dilemmas"/><Topic description="Dealing with harassment and discrimination"/><Topic description="Forms of professional credentialing"/><Topic description="Acceptable use policies for computing in the workplace"/><Topic description="Ergonomics and healthy computing environments"/><Topic description="Time to market and cost considerations versus quality professional standards"/></KnowledgeUnit><KnowledgeUnit name="Intellectual Property"><Topic description="Philosophical foundations of intellectual property"/><Topic description="Intellectual property rights (cross-reference IM/Information Storage and Retrieval/intellectual property and protection)"/><Topic description="Intangible digital intellectual property (IDIP)"/><Topic description="Legal foundations for intellectual property protection"/><Topic description="Digital rights management"/><Topic description="Copyrights, patents, trade secrets, trademarks"/><Topic description="Plagiarism"/><Topic description="Foundations of the open source movement"/><Topic description="Software piracy"/></KnowledgeUnit><KnowledgeUnit name="Privacy and Civil Liberties"><Topic description="Philosophical foundations of privacy rights (cross-reference IS/Fundamental Issues/philosophical issues)"/><Topic description="Legal foundations of privacy protection"/><Topic description="Privacy implications of widespread data collection for transactional databases, data warehouses, surveillance systems, and cloud computing (cross-reference IM/Database Systems/data independence; IM/Data Mining/data cleaning)"/><Topic description="Ramifications of differential privacy"/><Topic description="Technology-based solutions for privacy protection (cross-reference IAS/Threats and Attacks/attacks on privacy and anonymity)"/><Topic description="Privacy legislation in areas of practice"/><Topic description="Civil liberties and cultural differences"/><Topic description="Freedom of expression and its limitations"/></KnowledgeUnit><KnowledgeUnit name="Professional Communication"><Topic description="Reading, understanding and summarizing technical material, including source code and documentation"/><Topic description="Writing effective technical documentation and materials"/><Topic description="Dynamics of oral, written, and electronic team and group communication (cross-reference HCI/Collaboration and Communication/group communication; SE/Project Management/team participation)"/><Topic description="Communicating professionally with stakeholders"/><Topic description="Utilizing collaboration tools (cross-reference HCI/Collaboration and Communication/online communities; IS/Agents/collaborative agents)"/><Topic description="Dealing with cross-cultural environments (cross-reference HCI/User-Centered Design and Testing/cross-cultural evaluation)"/><Topic description="Tradeoffs of competing risks in software projects, such as technology, structure/process, quality, people, market and financial (cross-reference SE/Software Project Management/Risk)"/></KnowledgeUnit><KnowledgeUnit name="Sustainability"><Topic description="Being a sustainable practitioner by taking into consideration cultural and environmental impacts of implementation decisions (e.g. organizational policies, economic viability, and resource consumption)."/><Topic description="Explore global social and environmental impacts of computer use and disposal (e-waste)"/><Topic description="Environmental impacts of design choices in specific areas such as algorithms, operating systems, networks, databases, or human-computer interaction (cross-reference SE/Software Evaluation/software evolution; HCI/Design-Oriented HCI/sustainability)"/><Topic description="Guidelines for sustainable design standards"/><Topic description="Systemic effects of complex computer-mediated phenomena (e.g. telecommuting or web shopping)"/><Topic description="Pervasive computing; information processing integrated into everyday objects and activities, such as smart energy systems, social networking and feedback systems to promote sustainable behavior, transportation, environmental monitoring, citizen science and activism."/><Topic description="Research on applications of computing to environmental issues, such as energy, pollution, resource usage, recycling and reuse, food management, farming and others."/><Topic description="The interdependence of the sustainability of software systems with social systems, including the knowledge and skills of its users, organizational processes and policies, and its societal context (e.g., market forces, government policies)."/></KnowledgeUnit><KnowledgeUnit name="History"><Topic description="Prehistory'the world before 1946"/><Topic description="History of computer hardware, software, networking (cross-reference AR/Digital logic and digital systems/ history of computer architecture)"/><Topic description="Pioneers of computing"/><Topic description="History of the Internet"/></KnowledgeUnit><KnowledgeUnit name="Economies of Computing"><Topic description="Monopolies and their economic implications"/><Topic description="Effect of skilled labor supply and demand on the quality of computing products"/><Topic description="Pricing strategies in the computing domain"/><Topic description="The phenomenon of outsourcing and off-shoring software development; impacts on employment and on economics"/><Topic description="Consequences of globalization for the computer science profession"/><Topic description="Differences in access to computing resources and the possible effects thereof"/><Topic description="Cost/benefit analysis of jobs with considerations to manufacturing, hardware, software, and engineering implications"/><Topic description="Cost estimates versus actual costs in relation to total costs"/><Topic description="Entrepreneurship: prospects and pitfalls"/><Topic description="Network effect or demand-side economies of scale"/><Topic description="Use of engineering economics in dealing with finances"/></KnowledgeUnit><KnowledgeUnit name="Security Policies, Laws and Computer Crimes"><Topic description="Examples of computer crimes and legal redress for computer criminals (cross-reference IAS/Digital Forensics/rules of evidence)"/><Topic description="Social engineering, identity theft and recovery (cross-reference HCI/Human Factors and Security/trust, privacy and deception)"/><Topic description="Issues surrounding the misuse of access and breaches in security"/><Topic description="Motivations and ramifications of cyber terrorism and criminal hacking, 'cracking'"/><Topic description="Effects of malware, such as viruses, worms and Trojan horses"/><Topic description="Crime prevention strategies"/><Topic description="Security policies (cross-reference IAS/Security Policy and Governance/policies)"/></KnowledgeUnit></CompetencyArea></CompetencyAreas>